// +build !ignore_autogenerated

// Copyright 2019 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha2

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoWatchSpec) DeepCopyInto(out *AutoWatchSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoWatchSpec.
func (in *AutoWatchSpec) DeepCopy() *AutoWatchSpec {
	if in == nil {
		return nil
	}
	out := new(AutoWatchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubebenchConfig) DeepCopyInto(out *KubebenchConfig) {
	*out = *in
	in.DefaultWorkflowAgent.DeepCopyInto(&out.DefaultWorkflowAgent)
	in.DefaultManagedVolumes.DeepCopyInto(&out.DefaultManagedVolumes)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubebenchConfig.
func (in *KubebenchConfig) DeepCopy() *KubebenchConfig {
	if in == nil {
		return nil
	}
	out := new(KubebenchConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubebenchJob) DeepCopyInto(out *KubebenchJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubebenchJob.
func (in *KubebenchJob) DeepCopy() *KubebenchJob {
	if in == nil {
		return nil
	}
	out := new(KubebenchJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubebenchJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubebenchJobList) DeepCopyInto(out *KubebenchJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KubebenchJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubebenchJobList.
func (in *KubebenchJobList) DeepCopy() *KubebenchJobList {
	if in == nil {
		return nil
	}
	out := new(KubebenchJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubebenchJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubebenchJobSpec) DeepCopyInto(out *KubebenchJobSpec) {
	*out = *in
	in.Arguments.DeepCopyInto(&out.Arguments)
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ManagedVolumes.DeepCopyInto(&out.ManagedVolumes)
	in.WorkflowAgent.DeepCopyInto(&out.WorkflowAgent)
	if in.Tasks != nil {
		in, out := &in.Tasks, &out.Tasks
		*out = make([]Task, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubebenchJobSpec.
func (in *KubebenchJobSpec) DeepCopy() *KubebenchJobSpec {
	if in == nil {
		return nil
	}
	out := new(KubebenchJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubebenchJobStatus) DeepCopyInto(out *KubebenchJobStatus) {
	*out = *in
	in.WorkflowStatus.DeepCopyInto(&out.WorkflowStatus)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubebenchJobStatus.
func (in *KubebenchJobStatus) DeepCopy() *KubebenchJobStatus {
	if in == nil {
		return nil
	}
	out := new(KubebenchJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedVolumes) DeepCopyInto(out *ManagedVolumes) {
	*out = *in
	if in.ExperimentVolume != nil {
		in, out := &in.ExperimentVolume, &out.ExperimentVolume
		*out = new(v1.Volume)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkflowVolume != nil {
		in, out := &in.WorkflowVolume, &out.WorkflowVolume
		*out = new(v1.Volume)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedVolumes.
func (in *ManagedVolumes) DeepCopy() *ManagedVolumes {
	if in == nil {
		return nil
	}
	out := new(ManagedVolumes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestSource) DeepCopyInto(out *ManifestSource) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestSource.
func (in *ManifestSource) DeepCopy() *ManifestSource {
	if in == nil {
		return nil
	}
	out := new(ManifestSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceOptions) DeepCopyInto(out *ResourceOptions) {
	*out = *in
	if in.AutoWatch != nil {
		in, out := &in.AutoWatch, &out.AutoWatch
		*out = new(AutoWatchSpec)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceOptions.
func (in *ResourceOptions) DeepCopy() *ResourceOptions {
	if in == nil {
		return nil
	}
	out := new(ResourceOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpec) DeepCopyInto(out *ResourceSpec) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = new(string)
		**out = **in
	}
	if in.ManifestFrom != nil {
		in, out := &in.ManifestFrom, &out.ManifestFrom
		*out = new(ManifestSource)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = new(ResourceOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpec.
func (in *ResourceSpec) DeepCopy() *ResourceSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(v1.Container)
		(*in).DeepCopyInto(*out)
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(ResourceSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Inputs.DeepCopyInto(&out.Inputs)
	in.Outputs.DeepCopyInto(&out.Outputs)
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowAgentSpec) DeepCopyInto(out *WorkflowAgentSpec) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(v1.Container)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowAgentSpec.
func (in *WorkflowAgentSpec) DeepCopy() *WorkflowAgentSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowAgentSpec)
	in.DeepCopyInto(out)
	return out
}
