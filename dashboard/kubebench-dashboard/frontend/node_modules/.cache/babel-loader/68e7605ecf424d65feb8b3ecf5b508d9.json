{"ast":null,"code":"var _jsxFileName = \"/home/akado2009/Desktop/everything/kubebench-dashboard/frontend/src/components/GenerateFromParameters.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { closeSnack, changeParameters, submitYamlParameters } from '../actions';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Button from \"@material-ui/core/Button\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '90%',\n      margin: '0 auto'\n    },\n    editor: {\n      margin: '0 auto'\n    },\n    submit: {\n      textAlign: 'center'\n    },\n    button: {\n      margin: theme.spacing.unit\n    },\n    progress: {\n      height: 10,\n      margin: 10\n    },\n    close: {\n      padding: theme.spacing.unit / 2\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: '100%'\n    },\n    help: {\n      padding: theme.spacing.unit / 2,\n      verticalAlign: \"middle\"\n    }\n  };\n};\n\nvar GenerateFromParameters = function GenerateFromParameters(props) {\n  var onYamlChange = function onYamlChange(value) {\n    props.changeYaml(value);\n  };\n\n  var onFieldChange = function onFieldChange(name) {\n    return function (event) {\n      return props.changeParameters(name, event.target.value);\n    };\n  };\n\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Generate from parameters\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), props.loading && React.createElement(LinearProgress, {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), props.parameters.map(function (param, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: param.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(HelpOutlineIcon, {\n      className: classes.help,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), param.name)), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: classes.textField,\n      value: param.value,\n      onChange: onFieldChange(param.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }), React.createElement(\"div\", {\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    disabled: props.loading,\n    color: \"primary\",\n    className: classes.button,\n    onClick: props.submitYamlParameters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Deploy\")), React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: props.snackOpen,\n    autoHideDuration: 6000,\n    onClose: props.closeSnack,\n    message: React.createElement(\"span\", {\n      id: \"message-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, props.snackText),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: props.closeSnack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    snackOpen: state.snackOpen,\n    snackText: state.snackText,\n    parameters: state.parameters\n  };\n};\n\nGenerateFromParameters.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  closeSnack: closeSnack,\n  changeParameters: changeParameters,\n  submitYamlParameters: submitYamlParameters\n})(withStyles(styles)(GenerateFromParameters));","map":{"version":3,"sources":["/home/akado2009/Desktop/everything/kubebench-dashboard/frontend/src/components/GenerateFromParameters.jsx"],"names":["React","connect","PropTypes","withStyles","closeSnack","changeParameters","submitYamlParameters","TextField","Typography","Grid","LinearProgress","Snackbar","IconButton","CloseIcon","Tooltip","HelpOutlineIcon","Button","styles","theme","root","width","margin","editor","submit","textAlign","button","spacing","unit","progress","height","close","padding","textField","marginLeft","marginRight","help","verticalAlign","GenerateFromParameters","props","onYamlChange","value","changeYaml","onFieldChange","name","event","target","classes","loading","parameters","map","param","i","description","vertical","horizontal","snackOpen","snackText","mapStateToProps","state","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { closeSnack, changeParameters, submitYamlParameters } from '../actions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    editor: {\n        margin: '0 auto',\n    },\n    submit: {\n        textAlign: 'center',\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: '100%'\n    },\n    help: {\n        padding: theme.spacing.unit / 2,\n        verticalAlign: \"middle\",\n    },\n});\n\n\nconst GenerateFromParameters = (props) => {\n\n    const onYamlChange = (value) => {\n        props.changeYaml(value);\n    };\n\n    const onFieldChange = (name) => (event) => {\n        return props.changeParameters(name, event.target.value);\n    };\n\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <h1>Generate from parameters</h1>\n            <hr />\n            {props.loading && <LinearProgress className={classes.progress}/>}\n            {\n                props.parameters.map((param, i) => {\n                return (\n                    <div key={i}>\n                        <Grid container>\n                            <Grid item xs={12} sm={3}>\n                                <Typography>\n                                    <Tooltip title={param.description}>\n                                        <HelpOutlineIcon className={classes.help} color={\"primary\"}/>\n                                    </Tooltip>\n                                    {param.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={8}>\n                                <TextField\n                                    className={classes.textField}\n                                    value={param.value}\n                                    onChange={onFieldChange(param.name)}\n                                    />\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n                })\n            }\n            <div className={classes.submit}>\n                <Button variant=\"contained\" disabled={props.loading} color={\"primary\"} className={classes.button} onClick={props.submitYamlParameters}>\n                    Deploy\n                </Button>\n            </div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={props.snackOpen}\n                autoHideDuration={6000}\n                onClose={props.closeSnack}\n                message={<span id=\"message-id\">{props.snackText}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={props.closeSnack}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        snackOpen: state.snackOpen,\n        snackText: state.snackText,\n        parameters: state.parameters,\n    };\n};\n\nGenerateFromParameters.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { closeSnack, changeParameters, submitYamlParameters })(withStyles(styles)(GenerateFromParameters));"]},"metadata":{},"sourceType":"module"}