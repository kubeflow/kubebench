{"ast":null,"code":"import _regeneratorRuntime from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios'; // const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport var fetchJobsSaga =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function fetchJobsSaga() {\n  var action, result, jobsList, i;\n  return _regeneratorRuntime.wrap(function fetchJobsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return take(actions.FETCH_JOB_REQUEST);\n\n        case 2:\n          action = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return call(fetchJobsGo);\n\n        case 6:\n          result = _context.sent;\n          jobsList = [];\n\n          for (i = 0; i < result.Names.length; i++) {\n            jobsList.push({\n              name: result.Names[i],\n              status: result.Status[i]\n            });\n          }\n\n          _context.next = 11;\n          return put({\n            type: actions.FETCH_JOB_SUCCESS,\n            jobsList: jobsList\n          });\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](3);\n          return _context.abrupt(\"return\", Promise.reject(_context.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, fetchJobsSaga, this, [[3, 13]]);\n});\n\nvar fetchJobsGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function fetchJobsGo() {\n  var result;\n  return _regeneratorRuntime.wrap(function fetchJobsGo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(axios.get, 'http://127.0.0.1:9303/fetch_jobs/');\n\n        case 3:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result.data);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, fetchJobsGo, this, [[0, 7]]);\n});\n\nexport var deleteJobSaga =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function deleteJobSaga() {\n  var action, result;\n  return _regeneratorRuntime.wrap(function deleteJobSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return take(actions.DELETE_SUBMIT);\n\n        case 2:\n          action = _context3.sent;\n          _context3.prev = 3;\n          _context3.next = 6;\n          return call(deleteJobGo, action.name);\n\n        case 6:\n          result = _context3.sent;\n          _context3.next = 12;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](3);\n          return _context3.abrupt(\"return\", Promise.reject(_context3.t0.message));\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, deleteJobSaga, this, [[3, 9]]);\n});\n\nvar deleteJobGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function deleteJobGo() {\n  var data, result;\n  return _regeneratorRuntime.wrap(function deleteJobGo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          data = {\n            name: name\n          };\n          _context4.next = 4;\n          return call(axios.post, 'http://127.0.0.1:9303/delete_job/', data);\n\n        case 4:\n          result = _context4.sent;\n          console.log(result);\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, deleteJobGo, this, [[0, 8]]);\n});\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fetchJobsSaga(), deleteJobSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked, this);\n}\n;","map":{"version":3,"sources":["/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/src/sagas/index.js"],"names":["rootSaga","take","put","call","fork","select","all","takeEvery","actions","axios","fetchJobsSaga","FETCH_JOB_REQUEST","action","fetchJobsGo","result","jobsList","i","Names","length","push","name","status","Status","type","FETCH_JOB_SUCCESS","Promise","reject","message","get","data","FETCH_JOB_FAILURE","error","deleteJobSaga","DELETE_SUBMIT","deleteJobGo","post","console","log","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios';\n\n// const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport const fetchJobsSaga = function *() {\n    const action = yield take(actions.FETCH_JOB_REQUEST);\n    try {\n        const result = yield call(\n            fetchJobsGo\n        );\n    \n        let jobsList = [];\n        for(let i = 0; i < result.Names.length; i++) {\n            jobsList.push(\n                {\n                    name: result.Names[i],\n                    status: result.Status[i],\n                }\n            );\n        }\n        yield put({\n            type: actions.FETCH_JOB_SUCCESS,\n            jobsList: jobsList,\n        });\n    } catch (err) {\n        return Promise.reject(err.message)\n    }\n};\n\nconst fetchJobsGo = function* () {\n    try {\n        const result = yield call(\n            axios.get,\n            'http://127.0.0.1:9303/fetch_jobs/'\n        );\n\n        return result.data;\n    } catch (err) {\n        yield put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const deleteJobSaga = function *() {\n    const action = yield take(actions.DELETE_SUBMIT);\n    try {\n        const result = yield call(\n            deleteJobGo,\n            action.name\n        );\n\n    } catch (err) {\n        return Promise.reject(err.message);\n    }\n}\n\nconst deleteJobGo = function* () {\n    try {\n        let data = {name};\n        const result = yield call(\n            axios.post,\n            'http://127.0.0.1:9303/delete_job/',\n            data,\n        );\n\n        console.log(result)\n    }catch (err) {\n        yield put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\nexport default function* rootSaga() {\n    yield all([\n        fetchJobsSaga(),\n        deleteJobSaga()\n    ]);\n};"]},"metadata":{},"sourceType":"module"}