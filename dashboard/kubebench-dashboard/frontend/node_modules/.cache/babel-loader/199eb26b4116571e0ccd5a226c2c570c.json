{"ast":null,"code":"import _classCallCheck from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/src/components/Watch.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DoneIcon from '@material-ui/icons/Done';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { openModal, closeModal, deleteJob } from \"../actions\";\nimport JobInfo from './JobInfo';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '90%',\n      margin: '0 auto'\n    },\n    running: {\n      color: '#8b8ffb'\n    },\n    failed: {\n      color: '#f26363'\n    },\n    finished: {\n      color: '#63f291'\n    },\n    progress: {\n      height: 10,\n      margin: 10\n    },\n    close: {\n      padding: theme.spacing.unit / 2\n    }\n  };\n};\n\nvar Watch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Watch, _React$Component);\n\n  function Watch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Watch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Watch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.open = function (id) {\n      return function (event) {\n        _this.props.openModal(id);\n      };\n    };\n\n    _this.deleteJob = function (name) {\n      _this.props.deleteJob(name);\n    };\n\n    return _this;\n  }\n\n  _createClass(Watch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchJob();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Watch\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), props.loading && React.createElement(LinearProgress, {\n        className: classes.progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(List, {\n        component: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.props.jobs.map(function (job, i) {\n        var icon;\n\n        if (job.status === 'running') {\n          icon = React.createElement(ScheduleIcon, {\n            className: classes.running,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        } else if (job.status === 'failed') {\n          icon = React.createElement(HighlightOffIcon, {\n            className: classes.failed,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        } else {\n          icon = React.createElement(DoneIcon, {\n            className: classes.finished,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(ListItem, {\n          button: true,\n          key: i,\n          onClick: _this2.open(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, icon), React.createElement(ListItemText, {\n          inset: true,\n          primary: job.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n      })), React.createElement(JobInfo, {\n        close: this.props.closeModal,\n        open: this.props.modalOpen,\n        name: this.props.name,\n        delete: this.deleteJob,\n        links: this.props.links,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        open: props.snackOpen,\n        autoHideDuration: 6000,\n        onClose: props.closeSnack,\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, props.snackText),\n        action: [React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: classes.close,\n          onClick: props.closeSnack,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Watch;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    jobs: state.jobsList,\n    modalOpen: state.modalOpen,\n    currentId: state.current,\n    name: state.currentName,\n    links: state.currentLinks,\n    loading: state.loading\n  };\n};\n\nWatch.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  openModal: openModal,\n  closeModal: closeModal,\n  deleteJob: deleteJob,\n  fetchJob: fetchJob\n})(withStyles(styles)(Watch));","map":{"version":3,"sources":["/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/src/components/Watch.jsx"],"names":["React","connect","PropTypes","withStyles","List","ListItem","ListItemIcon","ListItemText","ScheduleIcon","HighlightOffIcon","DoneIcon","LinearProgress","Snackbar","IconButton","CloseIcon","openModal","closeModal","deleteJob","JobInfo","styles","theme","root","width","margin","running","color","failed","finished","progress","height","close","padding","spacing","unit","Watch","open","id","event","props","name","fetchJob","classes","loading","jobs","map","job","i","icon","status","modalOpen","links","vertical","horizontal","snackOpen","closeSnack","snackText","Component","mapStateToProps","state","jobsList","currentId","current","currentName","currentLinks","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DoneIcon from '@material-ui/icons/Done';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { openModal, closeModal, deleteJob } from \"../actions\";\n\nimport JobInfo from './JobInfo'\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    running: {\n        color: '#8b8ffb',\n    },\n    failed: {\n        color: '#f26363',\n    },\n    finished: {\n        color: '#63f291',\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\n\nclass Watch extends React.Component {\n    componentDidMount() {\n        this.props.fetchJob()\n    }\n\n    open = (id) => event => {\n        this.props.openModal(id);\n    }\n\n    deleteJob = (name) => {\n        this.props.deleteJob(name)\n    }\n\n    render () {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <h1>Watch</h1>\n                <hr />\n                {props.loading && <LinearProgress className={classes.progress}/>}\n                <List component=\"nav\">\n                    {this.props.jobs.map((job, i) => {\n                        let icon;\n                        if (job.status === 'running') {\n                            icon = (<ScheduleIcon className={classes.running}/>)\n                        } else if (job.status === 'failed') {\n                            icon = (<HighlightOffIcon className={classes.failed}/>)\n                        } else {\n                            icon = (<DoneIcon className={classes.finished}/>)\n                        }\n                        return (\n                            <ListItem button key={i} onClick={this.open(i)}>\n                                <ListItemIcon>\n                                    {icon}\n                                </ListItemIcon>\n                                <ListItemText inset primary={job.name} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <JobInfo\n                    close={this.props.closeModal}\n                    open={this.props.modalOpen}\n                    name={this.props.name}\n                    delete={this.deleteJob}\n                    links={this.props.links}\n                />\n                 <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={props.snackOpen}\n                    autoHideDuration={6000}\n                    onClose={props.closeSnack}\n                    message={<span id=\"message-id\">{props.snackText}</span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={props.closeSnack}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jobs: state.jobsList,\n        modalOpen: state.modalOpen,\n        currentId: state.current,\n        name: state.currentName,\n        links: state.currentLinks,\n        loading: state.loading\n    };\n};\n\nWatch.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { openModal, closeModal, deleteJob, fetchJob })(withStyles(styles)(Watch));"]},"metadata":{},"sourceType":"module"}