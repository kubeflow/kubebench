{"ast":null,"code":"import _regeneratorRuntime from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios'; // const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport var submitYaml =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function submitYaml() {\n  var action;\n  return _regeneratorRuntime.wrap(function submitYaml$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return take(actions.DEPLOY_SUBMIT);\n\n        case 2:\n          action = _context.sent;\n          _context.prev = 3;\n          _context.next = 10;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 10;\n          return put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, submitYaml, this, [[3, 6]]);\n});\n\nvar submitYamlGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function submitYamlGo(yaml) {\n  var action, result;\n  return _regeneratorRuntime.wrap(function submitYamlGo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return take(actions.DELETE_SUBMIT);\n\n        case 2:\n          action = _context2.sent;\n          _context2.prev = 3;\n          _context2.next = 6;\n          return call(deleteJobGo, action.name);\n\n        case 6:\n          result = _context2.sent;\n\n          if (!(result.Status === \"ok\")) {\n            _context2.next = 12;\n            break;\n          }\n\n          _context2.next = 10;\n          return put({\n            type: actions.DELETE_SUCCESS,\n            text: \"Successfully deleted\"\n          });\n\n        case 10:\n          _context2.next = 14;\n          break;\n\n        case 12:\n          _context2.next = 14;\n          return put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong\"\n          });\n\n        case 14:\n          _context2.next = 19;\n          break;\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](3);\n          return _context2.abrupt(\"return\", Promise.reject(_context2.t0.message));\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, submitYamlGo, this, [[3, 16]]);\n});\n\nexport var fetchJobsSaga =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function fetchJobsSaga() {\n  var action, result, jobsList, i;\n  return _regeneratorRuntime.wrap(function fetchJobsSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return take(actions.FETCH_JOB_REQUEST);\n\n        case 2:\n          action = _context3.sent;\n          _context3.prev = 3;\n          _context3.next = 6;\n          return call(fetchJobsGo);\n\n        case 6:\n          result = _context3.sent;\n          jobsList = [];\n\n          for (i = 0; i < result.Names.length; i++) {\n            jobsList.push({\n              name: result.Names[i],\n              status: result.Status[i]\n            });\n          }\n\n          _context3.next = 11;\n          return put({\n            type: actions.FETCH_JOB_SUCCESS,\n            jobsList: jobsList\n          });\n\n        case 11:\n          _context3.next = 16;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](3);\n          return _context3.abrupt(\"return\", Promise.reject(_context3.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, fetchJobsSaga, this, [[3, 13]]);\n});\n\nvar fetchJobsGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function fetchJobsGo() {\n  var result;\n  return _regeneratorRuntime.wrap(function fetchJobsGo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(axios.get, 'http://127.0.0.1:9303/fetch_jobs/');\n\n        case 3:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", result.data);\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, fetchJobsGo, this, [[0, 7]]);\n});\n\nexport var deleteJobSaga =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function deleteJobSaga() {\n  var action, result;\n  return _regeneratorRuntime.wrap(function deleteJobSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return take(actions.DELETE_SUBMIT);\n\n        case 2:\n          action = _context5.sent;\n          _context5.prev = 3;\n          _context5.next = 6;\n          return call(deleteJobGo, action.name);\n\n        case 6:\n          result = _context5.sent;\n\n          if (!(result.Status === \"ok\")) {\n            _context5.next = 12;\n            break;\n          }\n\n          _context5.next = 10;\n          return put({\n            type: actions.DELETE_SUCCESS,\n            text: \"Successfully deleted\"\n          });\n\n        case 10:\n          _context5.next = 14;\n          break;\n\n        case 12:\n          _context5.next = 14;\n          return put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong\"\n          });\n\n        case 14:\n          _context5.next = 19;\n          break;\n\n        case 16:\n          _context5.prev = 16;\n          _context5.t0 = _context5[\"catch\"](3);\n          return _context5.abrupt(\"return\", Promise.reject(_context5.t0.message));\n\n        case 19:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, deleteJobSaga, this, [[3, 16]]);\n});\n\nvar deleteJobGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function deleteJobGo(name) {\n  var data, result;\n  return _regeneratorRuntime.wrap(function deleteJobGo$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          data = {\n            name: name\n          };\n          _context6.next = 4;\n          return call(axios.post, 'http://127.0.0.1:9303/delete_job/', data);\n\n        case 4:\n          result = _context6.sent;\n          return _context6.abrupt(\"return\", result.data);\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, deleteJobGo, this, [[0, 8]]);\n});\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fetchJobsSaga(), deleteJobSaga(), submitYaml()]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked, this);\n}\n;","map":{"version":3,"sources":["/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/src/sagas/index.js"],"names":["rootSaga","take","put","call","fork","select","all","takeEvery","actions","axios","submitYaml","DEPLOY_SUBMIT","action","type","DEPLOY_FAILURE","error","submitYamlGo","yaml","DELETE_SUBMIT","deleteJobGo","name","result","Status","DELETE_SUCCESS","text","DELETE_FAILURE","Promise","reject","message","fetchJobsSaga","FETCH_JOB_REQUEST","fetchJobsGo","jobsList","i","Names","length","push","status","FETCH_JOB_SUCCESS","get","data","FETCH_JOB_FAILURE","deleteJobSaga","post"],"mappings":"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","sourcesContent":["import { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios';\n\n// const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport const submitYaml = function *() {\n    const action = yield take(actions.DEPLOY_SUBMIT);\n    try {\n\n    } catch (err) {\n        yield put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\"\n        })\n    }\n};\n\nconst submitYamlGo = function* (yaml) {\n    const action = yield take(actions.DELETE_SUBMIT);\n    try {\n        const result = yield call(\n            deleteJobGo,\n            action.name\n        );\n        if (result.Status === \"ok\") {\n            yield put({\n                type: actions.DELETE_SUCCESS,\n                text: \"Successfully deleted\",\n            });\n        } else {\n            yield put({\n                type: actions.DELETE_FAILURE,\n                error: \"Whoops, something is wrong\",\n            });\n        }\n\n    } catch (err) {\n        return Promise.reject(err.message);\n    } \n}\n\nexport const fetchJobsSaga = function *() {\n    const action = yield take(actions.FETCH_JOB_REQUEST);\n    try {\n        const result = yield call(\n            fetchJobsGo\n        );\n    \n        let jobsList = [];\n        for(let i = 0; i < result.Names.length; i++) {\n            jobsList.push(\n                {\n                    name: result.Names[i],\n                    status: result.Status[i],\n                }\n            );\n        }\n        yield put({\n            type: actions.FETCH_JOB_SUCCESS,\n            jobsList: jobsList,\n        });\n    } catch (err) {\n        return Promise.reject(err.message)\n    }\n};\n\nconst fetchJobsGo = function* () {\n    try {\n        const result = yield call(\n            axios.get,\n            'http://127.0.0.1:9303/fetch_jobs/'\n        );\n\n        return result.data;\n    } catch (err) {\n        yield put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const deleteJobSaga = function *() {\n    const action = yield take(actions.DELETE_SUBMIT);\n    try {\n        const result = yield call(\n            deleteJobGo,\n            action.name\n        );\n        if (result.Status === \"ok\") {\n            yield put({\n                type: actions.DELETE_SUCCESS,\n                text: \"Successfully deleted\",\n            });\n        } else {\n            yield put({\n                type: actions.DELETE_FAILURE,\n                error: \"Whoops, something is wrong\",\n            });\n        }\n\n    } catch (err) {\n        return Promise.reject(err.message);\n    }\n}\n\nconst deleteJobGo = function* (name) {\n    try {\n        let data = {name};\n        const result = yield call(\n            axios.post,\n            'http://127.0.0.1:9303/delete_job/',\n            data,\n        );\n\n        return result.data\n    }catch (err) {\n        yield put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fetchJobsSaga(),\n        deleteJobSaga(),\n        submitYaml(),\n    ]);\n};"]},"metadata":{},"sourceType":"module"}