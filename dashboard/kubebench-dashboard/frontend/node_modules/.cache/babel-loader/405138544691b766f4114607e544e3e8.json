{"ast":null,"code":"import _regeneratorRuntime from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios'; // const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport var submitYaml =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function submitYaml() {\n  var action, result;\n  return _regeneratorRuntime.wrap(function submitYaml$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return take(actions.DEPLOY_SUBMIT);\n\n        case 2:\n          action = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return call(submitYamlGo, action.yaml);\n\n        case 6:\n          result = _context.sent;\n\n          if (!(result === 200)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 10;\n          return put({\n            type: actions.DEPLOY_SUCCESS,\n            text: \"Successfully submitted.\"\n          });\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 16;\n          return put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, submitYaml, this, [[3, 12]]);\n});\n\nvar submitYamlGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function submitYamlGo(yaml) {\n  var data, result;\n  return _regeneratorRuntime.wrap(function submitYamlGo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          data = {\n            yaml: yaml\n          };\n          _context2.next = 4;\n          return call(axios.post, 'http://127.0.0.1:9303/submit_yaml/', data);\n\n        case 4:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result.status);\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, submitYamlGo, this, [[0, 8]]);\n});\n\nexport var submitParams =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function submitParams() {\n  var action, result;\n  return _regeneratorRuntime.wrap(function submitParams$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!true) {\n            _context3.next = 19;\n            break;\n          }\n\n          _context3.next = 3;\n          return take(actions.DEPLOY_PARAM_SUBMIT);\n\n        case 3:\n          action = _context3.sent;\n          _context3.prev = 4;\n          _context3.next = 7;\n          return call(submitParamsGo, action.parameters);\n\n        case 7:\n          result = _context3.sent;\n\n          if (!(result === 200)) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 11;\n          return put({\n            type: actions.DEPLOY_PARAM_SUCCESS,\n            text: \"Successfully submitted.\"\n          });\n\n        case 11:\n          _context3.next = 17;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](4);\n          _context3.next = 17;\n          return put({\n            type: actions.DEPLOY_PARAM_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 17:\n          _context3.next = 0;\n          break;\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, submitParams, this, [[4, 13]]);\n});\n\nvar submitParamsGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function submitParamsGo(parameters) {\n  var newParameters, result;\n  return _regeneratorRuntime.wrap(function submitParamsGo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          newParameters = {};\n          parameters.map(function (item, i) {\n            newParameters[item.name] = item.value;\n          });\n          _context4.next = 5;\n          return call(axios.post, 'http://127.0.0.1:9303/submit_params/', newParameters);\n\n        case 5:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", result.status);\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 13;\n          return put({\n            type: actions.DEPLOY_PARAM_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, submitParamsGo, this, [[0, 9]]);\n});\n\nexport var fetchJobsSaga =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function fetchJobsSaga() {\n  var action, result, jobsList, i;\n  return _regeneratorRuntime.wrap(function fetchJobsSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!true) {\n            _context5.next = 19;\n            break;\n          }\n\n          _context5.next = 3;\n          return take(actions.FETCH_JOB_REQUEST);\n\n        case 3:\n          action = _context5.sent;\n          _context5.prev = 4;\n          _context5.next = 7;\n          return call(fetchJobsGo);\n\n        case 7:\n          result = _context5.sent;\n          jobsList = [];\n\n          for (i = 0; i < result.Names.length; i++) {\n            jobsList.push({\n              name: result.Names[i],\n              status: result.Status[i]\n            });\n          }\n\n          _context5.next = 12;\n          return put({\n            type: actions.FETCH_JOB_SUCCESS,\n            jobsList: jobsList\n          });\n\n        case 12:\n          _context5.next = 17;\n          break;\n\n        case 14:\n          _context5.prev = 14;\n          _context5.t0 = _context5[\"catch\"](4);\n          return _context5.abrupt(\"return\", Promise.reject(_context5.t0.message));\n\n        case 17:\n          _context5.next = 0;\n          break;\n\n        case 19:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, fetchJobsSaga, this, [[4, 14]]);\n});\n\nvar fetchJobsGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function fetchJobsGo() {\n  var result;\n  return _regeneratorRuntime.wrap(function fetchJobsGo$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(axios.get, 'http://127.0.0.1:9303/fetch_jobs/');\n\n        case 3:\n          result = _context6.sent;\n          return _context6.abrupt(\"return\", result.data);\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 11;\n          return put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, fetchJobsGo, this, [[0, 7]]);\n});\n\nexport var deleteJobSaga =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function deleteJobSaga() {\n  var action, result;\n  return _regeneratorRuntime.wrap(function deleteJobSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!true) {\n            _context7.next = 22;\n            break;\n          }\n\n          _context7.next = 3;\n          return take(actions.DELETE_SUBMIT);\n\n        case 3:\n          action = _context7.sent;\n          _context7.prev = 4;\n          _context7.next = 7;\n          return call(deleteJobGo, action.name);\n\n        case 7:\n          result = _context7.sent;\n\n          if (!(result.Status === \"ok\")) {\n            _context7.next = 13;\n            break;\n          }\n\n          _context7.next = 11;\n          return put({\n            type: actions.DELETE_SUCCESS,\n            text: \"Successfully deleted\"\n          });\n\n        case 11:\n          _context7.next = 15;\n          break;\n\n        case 13:\n          _context7.next = 15;\n          return put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong\"\n          });\n\n        case 15:\n          _context7.next = 20;\n          break;\n\n        case 17:\n          _context7.prev = 17;\n          _context7.t0 = _context7[\"catch\"](4);\n          return _context7.abrupt(\"return\", Promise.reject(_context7.t0.message));\n\n        case 20:\n          _context7.next = 0;\n          break;\n\n        case 22:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, deleteJobSaga, this, [[4, 17]]);\n});\n\nvar deleteJobGo =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function deleteJobGo(name) {\n  var data, result;\n  return _regeneratorRuntime.wrap(function deleteJobGo$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          data = {\n            name: name\n          };\n          _context8.next = 4;\n          return call(axios.post, 'http://127.0.0.1:9303/delete_job/', data);\n\n        case 4:\n          result = _context8.sent;\n          return _context8.abrupt(\"return\", result.data);\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 12;\n          return put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\"\n          });\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, deleteJobGo, this, [[0, 8]]);\n});\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(fetchJobsSaga), fork(deleteJobSaga), fork(submitYaml), fork(submitParams)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked, this);\n}\n;","map":{"version":3,"sources":["/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/src/sagas/index.js"],"names":["rootSaga","take","put","call","fork","select","all","takeEvery","actions","axios","submitYaml","DEPLOY_SUBMIT","action","submitYamlGo","yaml","result","type","DEPLOY_SUCCESS","text","DEPLOY_FAILURE","error","data","post","status","submitParams","DEPLOY_PARAM_SUBMIT","submitParamsGo","parameters","DEPLOY_PARAM_SUCCESS","DEPLOY_PARAM_FAILURE","newParameters","map","item","i","name","value","fetchJobsSaga","FETCH_JOB_REQUEST","fetchJobsGo","jobsList","Names","length","push","Status","FETCH_JOB_SUCCESS","Promise","reject","message","get","FETCH_JOB_FAILURE","deleteJobSaga","DELETE_SUBMIT","deleteJobGo","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":";;;;yBAsMyBA,Q;;AAtMzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwCC,GAAxC,EAA6CC,SAA7C,QAA8D,oBAA9D;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,UAAU;AAAA;AAAA,yBAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACP,iBAAMT,IAAI,CAACO,OAAO,CAACG,aAAT,CAAV;;AADO;AAChBC,UAAAA,MADgB;AAAA;AAAA;AAGH,iBAAMT,IAAI,CACrBU,YADqB,EAErBD,MAAM,CAACE,IAFc,CAAV;;AAHG;AAGZC,UAAAA,MAHY;;AAAA,gBAOdA,MAAM,KAAK,GAPG;AAAA;AAAA;AAAA;;AAAA;AAQd,iBAAMb,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACS,cADR;AAENC,YAAAA,IAAI,EAAE;AAFA,WAAD,CAAT;;AARc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAclB,iBAAMhB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACW,cADR;AAENC,YAAAA,KAAK,EAAE;AAFD,WAAD,CAAT;;AAdkB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAbV,UAAa;AAAA,CAAH,CAAhB;;AAqBP,IAAMG,YAAY;AAAA;AAAA,yBAAG,SAAfA,YAAe,CAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETO,UAAAA,IAFS,GAEF;AAACP,YAAAA,IAAI,EAAJA;AAAD,WAFE;AAAA;AAGE,iBAAMX,IAAI,CACrBM,KAAK,CAACa,IADe,EAErB,oCAFqB,EAGrBD,IAHqB,CAAV;;AAHF;AAGPN,UAAAA,MAHO;AAAA,4CASNA,MAAM,CAACQ,MATD;;AAAA;AAAA;AAAA;AAAA;AAWb,iBAAMrB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACW,cADR;AAENC,YAAAA,KAAK,EAAE;AAFD,WAAD,CAAT;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA,KAAfP,YAAe;AAAA,CAAH,CAAlB;;AAkBA,OAAO,IAAMW,YAAY;AAAA;AAAA,yBAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACjB,IADiB;AAAA;AAAA;AAAA;;AAAA;AAEL,iBAAMvB,IAAI,CAACO,OAAO,CAACiB,mBAAT,CAAV;;AAFK;AAEdb,UAAAA,MAFc;AAAA;AAAA;AAID,iBAAMT,IAAI,CACrBuB,cADqB,EAErBd,MAAM,CAACe,UAFc,CAAV;;AAJC;AAIVZ,UAAAA,MAJU;;AAAA,gBAQZA,MAAM,KAAK,GARC;AAAA;AAAA;AAAA;;AAAA;AASZ,iBAAMb,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACoB,oBADR;AAENV,YAAAA,IAAI,EAAE;AAFA,WAAD,CAAT;;AATY;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAehB,iBAAMhB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACqB,oBADR;AAENT,YAAAA,KAAK,EAAE;AAFD,WAAD,CAAT;;AAfgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAfI,YAAe;AAAA,CAAH,CAAlB;;AAuBP,IAAME,cAAc;AAAA;AAAA,yBAAG,SAAjBA,cAAiB,CAAWC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXG,UAAAA,aAFW,GAEK,EAFL;AAGfH,UAAAA,UAAU,CAACI,GAAX,CAAe,UAACC,IAAD,EAAOC,CAAP,EAAa;AACxBH,YAAAA,aAAa,CAACE,IAAI,CAACE,IAAN,CAAb,GAA2BF,IAAI,CAACG,KAAhC;AACH,WAFD;AAHe;AAOA,iBAAMhC,IAAI,CACrBM,KAAK,CAACa,IADe,EAErB,sCAFqB,EAGrBQ,aAHqB,CAAV;;AAPA;AAOTf,UAAAA,MAPS;AAAA,4CAaRA,MAAM,CAACQ,MAbC;;AAAA;AAAA;AAAA;AAAA;AAef,iBAAMrB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACqB,oBADR;AAENT,YAAAA,KAAK,EAAE;AAFD,WAAD,CAAT;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjBM,cAAiB;AAAA,CAAH,CAApB;;AAsBA,OAAO,IAAMU,aAAa;AAAA;AAAA,yBAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAClB,IADkB;AAAA;AAAA;AAAA;;AAAA;AAEN,iBAAMnC,IAAI,CAACO,OAAO,CAAC6B,iBAAT,CAAV;;AAFM;AAEfzB,UAAAA,MAFe;AAAA;AAAA;AAIF,iBAAMT,IAAI,CACrBmC,WADqB,CAAV;;AAJE;AAIXvB,UAAAA,MAJW;AAQbwB,UAAAA,QARa,GAQF,EARE;;AASjB,eAAQN,CAAR,GAAY,CAAZ,EAAeA,CAAC,GAAGlB,MAAM,CAACyB,KAAP,CAAaC,MAAhC,EAAwCR,CAAC,EAAzC,EAA6C;AACzCM,YAAAA,QAAQ,CAACG,IAAT,CACI;AACIR,cAAAA,IAAI,EAAEnB,MAAM,CAACyB,KAAP,CAAaP,CAAb,CADV;AAEIV,cAAAA,MAAM,EAAER,MAAM,CAAC4B,MAAP,CAAcV,CAAd;AAFZ,aADJ;AAMH;;AAhBgB;AAiBjB,iBAAM/B,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACoC,iBADR;AAENL,YAAAA,QAAQ,EAAEA;AAFJ,WAAD,CAAT;;AAjBiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAsBVM,OAAO,CAACC,MAAR,CAAe,aAAIC,OAAnB,CAtBU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhBX,aAAgB;AAAA,CAAH,CAAnB;;AA2BP,IAAME,WAAW;AAAA;AAAA,yBAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEG,iBAAMnC,IAAI,CACrBM,KAAK,CAACuC,GADe,EAErB,mCAFqB,CAAV;;AAFH;AAENjC,UAAAA,MAFM;AAAA,4CAOLA,MAAM,CAACM,IAPF;;AAAA;AAAA;AAAA;AAAA;AASZ,iBAAMnB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAACyC,iBADR;AAEN7B,YAAAA,KAAK,EAAE;AAFD,WAAD,CAAT;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA,KAAdkB,WAAc;AAAA,CAAH,CAAjB;;AAgBA,OAAO,IAAMY,aAAa;AAAA;AAAA,yBAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAClB,IADkB;AAAA;AAAA;AAAA;;AAAA;AAEN,iBAAMjD,IAAI,CAACO,OAAO,CAAC2C,aAAT,CAAV;;AAFM;AAEfvC,UAAAA,MAFe;AAAA;AAAA;AAIF,iBAAMT,IAAI,CACrBiD,WADqB,EAErBxC,MAAM,CAACsB,IAFc,CAAV;;AAJE;AAIXnB,UAAAA,MAJW;;AAAA,gBAQbA,MAAM,CAAC4B,MAAP,KAAkB,IARL;AAAA;AAAA;AAAA;;AAAA;AASb,iBAAMzC,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAAC6C,cADR;AAENnC,YAAAA,IAAI,EAAE;AAFA,WAAD,CAAT;;AATa;AAAA;AAAA;;AAAA;AAAA;AAcb,iBAAMhB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAAC8C,cADR;AAENlC,YAAAA,KAAK,EAAE;AAFD,WAAD,CAAT;;AAda;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAqBVyB,OAAO,CAACC,MAAR,CAAe,aAAIC,OAAnB,CArBU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhBG,aAAgB;AAAA,CAAH,CAAnB;;AA0BP,IAAME,WAAW;AAAA;AAAA,yBAAG,SAAdA,WAAc,CAAWlB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERb,UAAAA,IAFQ,GAED;AAACa,YAAAA,IAAI,EAAJA;AAAD,WAFC;AAAA;AAGG,iBAAM/B,IAAI,CACrBM,KAAK,CAACa,IADe,EAErB,mCAFqB,EAGrBD,IAHqB,CAAV;;AAHH;AAGNN,UAAAA,MAHM;AAAA,4CASLA,MAAM,CAACM,IATF;;AAAA;AAAA;AAAA;AAAA;AAWZ,iBAAMnB,GAAG,CAAC;AACNc,YAAAA,IAAI,EAAER,OAAO,CAAC8C,cADR;AAENlC,YAAAA,KAAK,EAAE;AAFD,WAAD,CAAT;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA,KAAdgC,WAAc;AAAA,CAAH,CAAjB;;AAkBA,eAAe,SAAUpD,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMM,GAAG,CAAC,CACNF,IAAI,CAACgC,aAAD,CADE,EAENhC,IAAI,CAAC8C,aAAD,CAFE,EAGN9C,IAAI,CAACM,UAAD,CAHE,EAINN,IAAI,CAACoB,YAAD,CAJE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOd","sourcesContent":["import { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios';\n\n// const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport const submitYaml = function *() {\n    const action = yield take(actions.DEPLOY_SUBMIT);\n    try {\n        const result = yield call(\n            submitYamlGo,\n            action.yaml,\n        );\n        if (result === 200) {\n            yield put({\n                type: actions.DEPLOY_SUCCESS,\n                text: \"Successfully submitted.\",\n            });\n        }\n    } catch (err) {\n        yield put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\"\n        })\n    }\n};\n\nconst submitYamlGo = function* (yaml) {\n    try {\n        let data = {yaml};\n        const result = yield call(\n            axios.post,\n            'http://127.0.0.1:9303/submit_yaml/',\n            data,\n        );\n\n        return result.status\n    }catch (err) {\n        yield put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const submitParams = function *() {\n    while (true) {\n        const action = yield take(actions.DEPLOY_PARAM_SUBMIT);\n        try {\n            const result = yield call(\n                submitParamsGo,\n                action.parameters\n            );\n            if (result === 200) {\n                yield put({\n                    type: actions.DEPLOY_PARAM_SUCCESS,\n                    text: \"Successfully submitted.\",\n                });\n            }\n        } catch (err) {\n            yield put({\n                type: actions.DEPLOY_PARAM_FAILURE,\n                error: \"Whoops, something is wrong...\"\n            })\n        }\n    }\n};\n\nconst submitParamsGo = function* (parameters) {\n    try {\n        let newParameters = {};\n        parameters.map((item, i) => {\n            newParameters[item.name] = item.value;\n        })\n\n        const result = yield call(\n            axios.post,\n            'http://127.0.0.1:9303/submit_params/',\n            newParameters,\n        );\n        \n        return result.status\n    }catch (err) {\n        yield put({\n            type: actions.DEPLOY_PARAM_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const fetchJobsSaga = function *() {\n    while (true) {\n        const action = yield take(actions.FETCH_JOB_REQUEST);\n        try {\n            const result = yield call(\n                fetchJobsGo\n            );\n        \n            let jobsList = [];\n            for(let i = 0; i < result.Names.length; i++) {\n                jobsList.push(\n                    {\n                        name: result.Names[i],\n                        status: result.Status[i],\n                    }\n                );\n            }\n            yield put({\n                type: actions.FETCH_JOB_SUCCESS,\n                jobsList: jobsList,\n            });\n        } catch (err) {\n            return Promise.reject(err.message)\n        }\n    }\n};\n\nconst fetchJobsGo = function* () {\n    try {\n        const result = yield call(\n            axios.get,\n            'http://127.0.0.1:9303/fetch_jobs/'\n        );\n\n        return result.data;\n    } catch (err) {\n        yield put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const deleteJobSaga = function *() {\n    while (true) {\n        const action = yield take(actions.DELETE_SUBMIT);\n        try {\n            const result = yield call(\n                deleteJobGo,\n                action.name\n            );\n            if (result.Status === \"ok\") {\n                yield put({\n                    type: actions.DELETE_SUCCESS,\n                    text: \"Successfully deleted\",\n                });\n            } else {\n                yield put({\n                    type: actions.DELETE_FAILURE,\n                    error: \"Whoops, something is wrong\",\n                });\n            }\n\n        } catch (err) {\n            return Promise.reject(err.message);\n        }\n    }\n}\n\nconst deleteJobGo = function* (name) {\n    try {\n        let data = {name};\n        const result = yield call(\n            axios.post,\n            'http://127.0.0.1:9303/delete_job/',\n            data,\n        );\n\n        return result.data\n    }catch (err) {\n        yield put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchJobsSaga),\n        fork(deleteJobSaga),\n        fork(submitYaml),\n        fork(submitParams),\n    ]);\n};"]},"metadata":{},"sourceType":"module"}