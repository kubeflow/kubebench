{"ast":null,"code":"import _objectSpread from \"/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as ActionTypes from '../actions'; // import { combineReducers } from 'redux';\n\nvar initialState = {\n  yaml: '',\n  loading: false,\n  snackOpen: false,\n  snackText: '',\n  jobsList: [{\n    name: 'Job 1',\n    status: 'running'\n  }, {\n    name: 'Job 2',\n    status: 'failed'\n  }, {\n    name: 'Job 3',\n    status: 'finished'\n  }],\n  modalOpen: false,\n  currentId: null,\n  currentName: '',\n  currentLinks: ['First link', 'Second link'],\n  parameters: [{\n    name: \"serviceAccount\",\n    value: \"default\",\n    description: \"The service account used to run the job\"\n  }, {\n    name: \"controllerImage\",\n    value: \"gcr.io/kubeflow-images-public/kubebench/kubebench-controller:3c75b50\",\n    description: \"Configurator image\"\n  }, {\n    name: \"githubTokenSecret\",\n    description: \"\",\n    value: \"GitHub token secret\"\n  }, {\n    name: \"githubTokenSecretKey\",\n    value: \"\",\n    description: \"Key of GitHub token secret\"\n  }, {\n    name: \"gcpCredentialsSecret\",\n    value: \"GCP credentials secret\",\n    description: \"\"\n  }, {\n    name: \"gcpCredentialsSecretKey\",\n    value: \"\",\n    description: \"Key of GCP credentials secret\"\n  }, {\n    name: \"mainJobKsPrototype\",\n    value: \"kubebench-example-tfcnn\",\n    description: \"The Ksonnet prototype of the job being benchmarked\"\n  }, {\n    name: \"mainJobKsPackage\",\n    value: \"kubebench-examples\",\n    description: \"The Ksonnet package of the job being benchmarked\"\n  }, {\n    name: \"mainJobKsRegistry\",\n    value: \"github.com/kubeflow/kubebench/tree/master/kubebench\",\n    description: \"The Ksonnet registry of the job being benchmarked\"\n  }, {\n    name: \"mainJobConfig\",\n    value: \"tf-cnn/tf-cnn-dummy.yaml\",\n    description: \"Path to the config of the benchmarked job\"\n  }, {\n    name: \"experimentConfigPvc\",\n    value: \"kubebench-config-pvc\",\n    description: \"Configuration PVC\"\n  }, {\n    name: \"experimentDataPvc\",\n    value: \"\",\n    description: \"Data PVC\"\n  }, {\n    name: \"experimentRecordPvc\",\n    value: \"kubebench-exp-pvc\",\n    description: \"Experiment PVC\"\n  }, {\n    name: \"postJobImage\",\n    value: \"gcr.io/kubeflow-images-public/kubebench/kubebench-example-tf-cnn-post-processor:3c75b50\",\n    description: \"Image of post processor\"\n  }, {\n    name: \"postJobArgs\",\n    value: \"\",\n    description: \"Arguments of post processor\"\n  }, {\n    name: \"reportType\",\n    value: \"csv\",\n    description: \"Type of reporter\"\n  }, {\n    name: \"csvReporterInput\",\n    value: \"result.json\",\n    description: \"The input of CSV reporter\"\n  }, {\n    name: \"csvReporterOutput\",\n    value: \"report.csv\",\n    description: \"The output of CSV reporter\"\n  }]\n};\n\nvar filterValue = function filterValue(obj, key) {\n  return obj.findIndex(function (p) {\n    return p.name === key;\n  });\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.CHANGE_YAML:\n      return _objectSpread({}, state, {\n        yaml: action.yaml\n      });\n\n    case ActionTypes.DEPLOY_SUBMIT:\n      return _objectSpread({}, state, {\n        loading: action.loading // snackOpen: true,\n        // snackText: 'Successfully deployed',\n\n      });\n\n    case ActionTypes.DEPLOY_PARAM_SUBMIT:\n      return _objectSpread({}, state, {\n        loading: action.loading\n      });\n\n    case ActionTypes.CLOSE_SNACK:\n      return _objectSpread({}, state, {\n        snackOpen: false\n      });\n\n    case ActionTypes.SELECT_JOB:\n      return _objectSpread({}, state, {\n        modalOpen: true,\n        currentId: action.id,\n        currentName: state.jobsList[action.id].name\n      });\n\n    case ActionTypes.CLOSE_SELECT_JOB:\n      return _objectSpread({}, state, {\n        modalOpen: false,\n        currentId: action.id\n      });\n\n    case ActionTypes.CHANGE_PARAMETER:\n      var params = state.parameters.slice();\n      var index = filterValue(params, action.name);\n      params[index].value = action.value;\n      return _objectSpread({}, state, {\n        parameters: params\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/akado2009/go/src/github.com/kubeflow/kubebench/dashboard/frontend/src/reducers/index.js"],"names":["ActionTypes","initialState","yaml","loading","snackOpen","snackText","jobsList","name","status","modalOpen","currentId","currentName","currentLinks","parameters","value","description","filterValue","obj","key","findIndex","p","rootReducer","state","action","type","CHANGE_YAML","DEPLOY_SUBMIT","DEPLOY_PARAM_SUBMIT","CLOSE_SNACK","SELECT_JOB","id","CLOSE_SELECT_JOB","CHANGE_PARAMETER","params","slice","index"],"mappings":"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","sourcesContent":["import * as ActionTypes from '../actions';\n// import { combineReducers } from 'redux';\n\nconst initialState = {\n    yaml: '',\n    loading: false,\n    snackOpen: false,\n    snackText: '',\n    jobsList: [\n        {\n            name: 'Job 1',\n            status: 'running',\n        },\n        {\n            name: 'Job 2',\n            status: 'failed',\n        },\n        {\n            name: 'Job 3',\n            status: 'finished',\n        }\n    ],\n    modalOpen: false,\n    currentId: null,\n    currentName: '',\n    currentLinks: ['First link', 'Second link'],\n    parameters: [\n        {\n            name: \"serviceAccount\",\n            value: \"default\",\n            description: \"The service account used to run the job\",\n        },\n        {\n            name: \"controllerImage\",\n            value: \"gcr.io/kubeflow-images-public/kubebench/kubebench-controller:3c75b50\",\n            description: \"Configurator image\",\n        },\n        {\n            name: \"githubTokenSecret\",\n            description: \"\",\n            value: \"GitHub token secret\",\n        },\n        {\n            name: \"githubTokenSecretKey\",\n            value: \"\",\n            description: \"Key of GitHub token secret\",\n        },\n        {\n            name: \"gcpCredentialsSecret\",\n            value: \"GCP credentials secret\",\n            description: \"\",\n        },\n        {\n            name: \"gcpCredentialsSecretKey\",\n            value: \"\",\n            description: \"Key of GCP credentials secret\",\n        },\n        {\n            name: \"mainJobKsPrototype\",\n            value: \"kubebench-example-tfcnn\",\n            description: \"The Ksonnet prototype of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobKsPackage\",\n            value: \"kubebench-examples\",\n            description: \"The Ksonnet package of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobKsRegistry\",\n            value: \"github.com/kubeflow/kubebench/tree/master/kubebench\",\n            description: \"The Ksonnet registry of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobConfig\",\n            value: \"tf-cnn/tf-cnn-dummy.yaml\",\n            description: \"Path to the config of the benchmarked job\",\n        },\n        {\n            name: \"experimentConfigPvc\",\n            value: \"kubebench-config-pvc\",\n            description: \"Configuration PVC\",\n        },\n        {\n            name: \"experimentDataPvc\",\n            value: \"\",\n            description: \"Data PVC\",\n        },\n        {\n            name: \"experimentRecordPvc\",\n            value: \"kubebench-exp-pvc\",\n            description: \"Experiment PVC\",\n        },\n        {\n            name: \"postJobImage\",\n            value: \"gcr.io/kubeflow-images-public/kubebench/kubebench-example-tf-cnn-post-processor:3c75b50\",\n            description: \"Image of post processor\",\n        },\n        {\n            name: \"postJobArgs\",\n            value: \"\",\n            description: \"Arguments of post processor\",\n        },\n        {\n            name: \"reportType\",\n            value: \"csv\",\n            description: \"Type of reporter\",\n        },\n        {\n            name: \"csvReporterInput\",\n            value: \"result.json\",\n            description: \"The input of CSV reporter\",\n        },\n        {\n            name: \"csvReporterOutput\",\n            value: \"report.csv\",\n            description: \"The output of CSV reporter\",\n        }\n    ]\n};\n\nconst filterValue = (obj, key) => {\n    return obj.findIndex(p => p.name === key)\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.CHANGE_YAML:\n            return {\n                ...state,\n                yaml: action.yaml,\n            };\n        case ActionTypes.DEPLOY_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n                // snackOpen: true,\n                // snackText: 'Successfully deployed',\n            };\n        case ActionTypes.DEPLOY_PARAM_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n        case ActionTypes.CLOSE_SNACK:\n            return {\n                ...state,\n                snackOpen: false,\n            };\n        case ActionTypes.SELECT_JOB:\n            return {\n                ...state,\n                modalOpen: true,\n                currentId: action.id,\n                currentName: state.jobsList[action.id].name,\n            };\n        case ActionTypes.CLOSE_SELECT_JOB:\n            return {\n                ...state,\n                modalOpen: false,\n                currentId: action.id,\n            };\n        case ActionTypes.CHANGE_PARAMETER:\n            let params = state.parameters.slice();\n            let index = filterValue(params, action.name);\n            params[index].value = action.value;\n            return {\n                ...state,\n                parameters: params,\n            };\n        default:\n            return state;\n\n    }\n};\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}