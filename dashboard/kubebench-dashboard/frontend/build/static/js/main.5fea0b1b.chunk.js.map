{"version":3,"sources":["components/Header.jsx","actions/index.js","components/GenerateFromYaml.jsx","components/GenerateFromParameters.jsx","components/JobInfo.jsx","components/Watch.jsx","components/App.jsx","serviceWorker.js","reducers/index.js","sagas/index.js","index.js","store/index.js"],"names":["withStyles","root","flexGrow","grow","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","closeSnack","type","connect","state","yaml","loading","snackOpen","snackText","changeYaml","submitWholeYaml","theme","width","margin","editor","submit","textAlign","button","spacing","unit","progress","height","close","padding","LinearProgress_default","lib_default","mode","value","onChange","name","editorProps","$blockScrolling","tabSize","enableLiveAutocompletion","fontSize","Button_default","disabled","onClick","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","id","action","IconButton_default","key","aria-label","Close_default","parameters","changeParameters","submitYamlParameters","params","textField","marginLeft","marginRight","help","verticalAlign","map","param","i","Grid_default","container","item","xs","sm","Tooltip_default","title","description","HelpOutline_default","TextField_default","event","target","deleteJob","paper","backgroundColor","palette","background","boxShadow","shadows","modal","top","left","Modal_default","aria-labelledby","aria-describedby","href","concat","Watch","_this","openModal","this","fetchJobs","_this2","List_default","component","jobs","job","icon","status","Schedule_default","running","HighlightOff_default","failed","Done_default","finished","ListItem_default","ListItemIcon_default","ListItemText_default","inset","primary","components_JobInfo","closeModal","modalOpen","React","Component","jobsList","currentId","current","currentName","paddingTop","components_Header","Link","to","Route","exact","path","GenerateFromYaml","GenerateFromParameters","Boolean","window","location","hostname","match","initialState","currentLinks","rootReducer","obj","arguments","length","undefined","Object","objectSpread","text","error","slice","findIndex","p","rootSaga","submitYaml","regenerator_default","mark","wrap","_context","prev","next","take","sent","call","submitYamlGo","put","t0","stop","data","result","_context2","axios","post","abrupt","submitParams","_context3","submitParamsGo","newParameters","_context4","fetchJobsSaga","_context5","fetchJobsGo","Names","push","Status","Promise","reject","_context6","get","deleteJobSaga","_context7","deleteJobGo","_context8","_context9","all","fork","_marked","store","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","logger","runSaga","run","dispatch","END","configureStore","createMuiTheme","main","secondary","ReactDOM","render","es","BrowserRouter","styles","CssBaseline_default","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fea0b1b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n};\n\nconst Header = (props) => {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <AppBar position={\"static\"} color={\"primary\"}>\n                <Toolbar>\n                    <Typography variant={\"display1\"} color={\"inherit\"} className={classes.grow}>\n                        <strong>KB Dashboard</strong>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","export const CHANGE_YAML = \"CHANGE_YAML\";\n\nexport const CLOSE_SNACK = \"CLOSE_SNACK\";\n\nexport const SELECT_JOB = \"SELECT_JOB\";\nexport const CLOSE_SELECT_JOB = \"CLOSE_SELECT_JOB\";\n\nexport const DEPLOY_SUBMIT = \"DEPLOY_SUBMIT\";\nexport const DEPLOY_SUCCESS = \"DEPLOY_SUCCESS\";\nexport const DEPLOY_FAILURE = \"DEPLOY_FAILURE\";\n\nexport const DEPLOY_PARAM_SUBMIT = \"DEPLOY_PARAM_SUBMIT\";\nexport const DEPLOY_PARAM_SUCCESS = \"DEPLOY_PARAM_SUCCESS\";\nexport const DEPLOY_PARAM_FAILURE = \"DEPLOY_PARAM_FAILURE\";\n\nexport const DELETE_SUBMIT = \"DELETE SUBMIT\";\nexport const DELETE_SUCCESS = \"DELETE_SUCCESS\";\nexport const DELETE_FAILURE = \"DELETE_FAILURE\";\n\nexport const CHANGE_PARAMETER = \"CHANGE_PARAMETER\";\n\nexport const FETCH_JOB_REQUEST = \"FETCH_JOB_REQUEST\";\nexport const FETCH_JOB_SUCCESS = \"FETCH_JOB_SUCCESS\";\nexport const FETCH_JOB_FAILURE = \"FETCH_JOB_FAILURE\";\n\n\nexport const changeYaml = (yaml) => {\n    return {\n        type: CHANGE_YAML,\n        yaml: yaml,\n    };\n};\n\nexport const changeParameters = (name, value) => {\n    return {\n        type: CHANGE_PARAMETER,\n        name,\n        value,\n    };\n};\n\nexport const submitWholeYaml = (yaml) => {\n    return {\n        type: DEPLOY_SUBMIT,\n        loading: true,\n        yaml: yaml\n    };\n};\n\nexport const submitYamlParameters = (params) => {\n    return {\n        type: DEPLOY_PARAM_SUBMIT,\n        loading: true,\n        parameters: params,\n    };\n};\n\nexport const closeSnack =() => {\n    return {\n        type: CLOSE_SNACK,\n    };\n};\n\nexport const openModal = (id) => {\n    return {\n        type: SELECT_JOB,\n        id,\n    };\n};\n\nexport const closeModal = () => {\n    return {\n        type: CLOSE_SELECT_JOB,\n    };\n};\n\nexport const deleteJob = (name) => {\n    return {\n        type: DELETE_SUBMIT,\n        name,\n    };\n};\n\nexport const fetchJobs = () => {\n    return {\n        type: FETCH_JOB_REQUEST,\n        loading: true,\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { changeYaml, submitWholeYaml, closeSnack } from '../actions';\n\nimport brace from 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\nimport AceEditor from 'react-ace';\nimport Button from '@material-ui/core/Button';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    editor: {\n        margin: '0 auto',\n    },\n    submit: {\n        textAlign: 'center',\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\n\nconst GenerateFromYaml = (props) => {\n\n    const onYamlChange = (value) => {\n        props.changeYaml(value);\n    };\n\n    const submitWholeYaml = () => {\n        props.submitWholeYaml(props.yaml);\n    };\n\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <h1>Generate</h1>\n            <hr />\n            {props.loading && <LinearProgress className={classes.progress}/>}\n            <div className={classes.editor}>\n                <AceEditor\n                    mode=\"javascript\"\n                    theme=\"tomorrow\"\n                    value={props.yaml}\n                    onChange={onYamlChange}\n                    name=\"UNIQUE_ID_OF_DIV\"\n                    editorProps={{$blockScrolling: true}}\n                    tabSize={2}\n                    enableLiveAutocompletion={true}\n                    fontSize={14}\n                    width={'100%'}\n                    height={700}\n                />\n            </div>\n            <div className={classes.submit}>\n                <Button variant=\"contained\" disabled={props.loading} color={\"primary\"} className={classes.button} onClick={submitWholeYaml}>\n                    Deploy\n                </Button>\n            </div>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={props.snackOpen}\n                autoHideDuration={6000}\n                onClose={props.closeSnack}\n                message={<span id=\"message-id\">{props.snackText}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={props.closeSnack}\n                    >\n                        <CloseIcon />\n                    </IconButton>,\n                ]}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        yaml: state.yaml,\n        loading: state.loading,\n        snackOpen: state.snackOpen,\n        snackText: state.snackText,\n    };\n};\n\nGenerateFromYaml.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { changeYaml, submitWholeYaml, closeSnack })(withStyles(styles)(GenerateFromYaml));","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { closeSnack, changeParameters, submitYamlParameters } from '../actions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    editor: {\n        margin: '0 auto',\n    },\n    submit: {\n        textAlign: 'center',\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: '100%'\n    },\n    help: {\n        padding: theme.spacing.unit / 2,\n        verticalAlign: \"middle\",\n    },\n});\n\n\nconst GenerateFromParameters = (props) => {\n\n    const onFieldChange = (name) => (event) => {\n        return props.changeParameters(name, event.target.value);\n    };\n\n    const submitYamlParameters = () => {\n        props.submitYamlParameters(props.parameters);\n    };\n\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <h1>Generate from parameters</h1>\n            <hr />\n            {props.loading && <LinearProgress className={classes.progress}/>}\n            {\n                props.parameters.map((param, i) => {\n                return (\n                    <div key={i}>\n                        <Grid container>\n                            <Grid item xs={12} sm={3}>\n                                <Typography>\n                                    <Tooltip title={param.description}>\n                                        <HelpOutlineIcon className={classes.help} color={\"primary\"}/>\n                                    </Tooltip>\n                                    {param.name}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={8}>\n                                <TextField\n                                    className={classes.textField}\n                                    value={param.value}\n                                    onChange={onFieldChange(param.name)}\n                                    />\n                            </Grid>\n                        </Grid>\n                    </div>\n                )\n                })\n            }\n            <div className={classes.submit}>\n                <Button variant=\"contained\" disabled={props.loading} color={\"primary\"} className={classes.button} onClick={submitYamlParameters}>\n                    Deploy\n                </Button>\n            </div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={props.snackOpen}\n                autoHideDuration={6000}\n                onClose={props.closeSnack}\n                message={<span id=\"message-id\">{props.snackText}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={props.closeSnack}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        snackOpen: state.snackOpen,\n        snackText: state.snackText,\n        parameters: state.parameters,\n    };\n};\n\nGenerateFromParameters.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { closeSnack, changeParameters, submitYamlParameters })(withStyles(styles)(GenerateFromParameters));","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport { deleteJob } from '../actions';\nimport {connect} from 'react-redux';\n\n\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    modal: {\n        top: '40%',\n        left: '40%',\n    }\n});\n\n\nconst JobInfo = (props) => {\n    const { classes } = props;\n\n    const deleteJob = () => {\n        props.deleteJob(props.name);\n    };\n\n    return (\n        <Modal\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            open={props.open}\n            onClose={props.close}\n            className={classes.modal}\n        >\n            <div className={classes.paper}>\n                <Typography variant=\"h6\" id=\"modal-title\">\n                    { props.name }\n                </Typography>\n                <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                    <ul>\n                        <li><a href={`/argo/workflows/default/${props.name}`} target={\"_blank\"}>Argo</a></li>\n                        <li><a href={`/grafana/`} target={\"_blank\"}>Grafana</a></li>\n                    </ul>\n                </Typography>\n                <Button variant=\"contained\" color={\"primary\"} className={classes.button} onClick={deleteJob}>\n                    Delete\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nJobInfo.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(null, { deleteJob })(withStyles(styles)(JobInfo));","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DoneIcon from '@material-ui/icons/Done';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { openModal, closeModal, fetchJobs, closeSnack } from \"../actions\";\n\nimport JobInfo from './JobInfo'\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    running: {\n        color: '#8b8ffb',\n    },\n    failed: {\n        color: '#f26363',\n    },\n    finished: {\n        color: '#63f291',\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\n\nclass Watch extends React.Component {\n    componentDidMount() {\n        this.props.fetchJobs()\n    }\n\n    open = (id) => event => {\n        this.props.openModal(id);\n    }\n\n    deleteJob = (name) => {\n        this.props.deleteJob(name)\n    }\n\n    render () {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <h1>Watch</h1>\n                <hr />\n                {this.props.loading && <LinearProgress className={classes.progress}/>}\n                <List component=\"nav\">\n                    {this.props.jobs.map((job, i) => {\n                        let icon;\n                        if (job.status === 'Running') {\n                            icon = (<ScheduleIcon className={classes.running}/>)\n                        } else if (job.status === 'Failed') {\n                            icon = (<HighlightOffIcon className={classes.failed}/>)\n                        } else {\n                            icon = (<DoneIcon className={classes.finished}/>)\n                        }\n                        return (\n                            <ListItem button key={i} onClick={this.open(i)}>\n                                <ListItemIcon>\n                                    {icon}\n                                </ListItemIcon>\n                                <ListItemText inset primary={job.name} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <JobInfo\n                    close={this.props.closeModal}\n                    open={this.props.modalOpen}\n                    name={this.props.name}\n                />\n                 <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.props.snackOpen}\n                    autoHideDuration={6000}\n                    onClose={this.props.closeSnack}\n                    message={<span id=\"message-id\">{this.props.snackText}</span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.props.closeSnack}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jobs: state.jobsList,\n        modalOpen: state.modalOpen,\n        currentId: state.current,\n        name: state.currentName,\n        loading: state.loading,\n        snackOpen: state.snackOpen,\n        snackText: state.snackText\n    };\n};\n\nWatch.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { openModal, closeModal, fetchJobs, closeSnack })(withStyles(styles)(Watch));","import React  from 'react';\nimport Header from './Header';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport GenerateFromYaml from './GenerateFromYaml';\nimport GenerateFromParameters from './GenerateFromParameters';\nimport Watch from './Watch';\n\nimport  { Route, Link } from 'react-router-dom';\n\n\nconst styles = {\n    root: {\n        width: '90%',\n        margin: '0 auto',\n        paddingTop: 20,\n    }\n};\n\nconst App = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <Header />\n\n            <ul>\n                <li>\n                    <Link to=\"/dashboard/\">Generate from YAML</Link>\n                </li>\n                <li>\n                    <Link to=\"/dashboard/defaults\">Generate from parameters</Link>\n                </li>\n                <li>\n                    <Link to=\"/dashboard/watch\">Watch</Link>\n                </li>\n            </ul>\n\n            <Route exact path=\"/dashboard/\" component={GenerateFromYaml} />\n            <Route path=\"/dashboard/defaults\" component={GenerateFromParameters} />\n            <Route path=\"/dashboard/watch\" component={Watch} />\n        </div>\n    )\n};\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ActionTypes from '../actions';\n// import { combineReducers } from 'redux';\n\nconst initialState = {\n    yaml: `\n    apiVersion: kubebench.operator/v1\n    kind: KubebenchJob\n    metadata:\n      name: kubebench-job\n      namespace: default\n    spec:\n      serviceAccount: default\n      volumeSpecs:\n        configVolume:\n          name: my-config-volume\n          persistentVolumeClaim:\n            claimName: kubebench-config-pvc\n        experimentVolume:\n          name: my-experiment-volume\n          persistentVolumeClaim:\n            claimName: kubebench-exp-pvc\n      secretSpecs: # optional\n        githubTokenSecret: # optional\n          secretName: my-github-token-secret\n          secretKey: my-github-token-secret-key\n        gcpCredentialsSecret: # optional\n          secretName: my-gcp-credentials-secret\n          secretKey: my-gcp-credentials-secret-key\n      jobSpecs:\n        preJob: # optional\n          container: # optional between \"container\" and \"resource\"\n            name: my-prejob\n            image: gcr.io/myprejob-image:latest # change it before using\n        mainJob: # mandatory\n          resource: # optional between \"container\" and \"resource\"\n            manifestTemplate:\n              valueFrom:\n                ksonnet: # optional, more types in the future\n                  prototype: kubebench-example-tfcnn\n                  package: kubebench-examples\n                  registry: github.com/kubeflow/kubebench/tree/master/kubebench\n            manifestParameters:\n              valueFrom:\n                path: abc/def/ghi.yaml\n            createSuccessCondition: createSuccess # optional\n            createFailureCondition: createFailure # optional\n            runSuccessCondition: runSuccess # optional\n            runFailureCondition: runFailre # optional\n            #other optional fields: \"manifest\" - string of raw manifest\n        postJob: # optional\n          container: # optional between \"container\" and \"resource\"\n            name: my-postjob\n            image: gcr.io/kubeflow-images-public/kubebench/kubebench-example-tf-cnn-post-processor:3c75b50\n      reportSpecs: # optional\n        csv: # optional\n            - inputPath: result.json\n              outputPath: report.csv`,\n    loading: false,\n    snackOpen: false,\n    snackText: '',\n    jobsList: [\n    ],\n    modalOpen: false,\n    currentId: null,\n    currentName: '',\n    currentLinks: ['First link', 'Second link'],\n    parameters: [\n        {\n            name: \"name\",\n            value: \"kubebench-job\",\n            description: \"Job name\",\n        },\n        {\n            name: \"namespace\",\n            value: \"default\",\n            description: \"Job namespace\"\n        },\n        {\n            name: \"serviceAccount\",\n            value: \"default\",\n            description: \"The service account used to run the job\",\n        },\n        {\n            name: \"githubTokenSecret\",\n            description: \"\",\n            value: \"GitHub token secret\",\n        },\n        {\n            name: \"githubTokenSecretKey\",\n            value: \"\",\n            description: \"Key of GitHub token secret\",\n        },\n        {\n            name: \"gcpCredentialsSecret\",\n            value: \"GCP credentials secret\",\n            description: \"\",\n        },\n        {\n            name: \"gcpCredentialsSecretKey\",\n            value: \"\",\n            description: \"Key of GCP credentials secret\",\n        },\n        {\n            name: \"mainJobKsPrototype\",\n            value: \"kubebench-example-tfcnn\",\n            description: \"The Ksonnet prototype of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobKsPackage\",\n            value: \"kubebench-examples\",\n            description: \"The Ksonnet package of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobKsRegistry\",\n            value: \"github.com/kubeflow/kubebench/tree/master/kubebench\",\n            description: \"The Ksonnet registry of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobConfig\",\n            value: \"tf-cnn/tf-cnn-dummy.yaml\",\n            description: \"Path to the config of the benchmarked job\",\n        },\n        {\n            name: \"experimentConfigPvc\",\n            value: \"kubebench-config-pvc\",\n            description: \"Configuration PVC\",\n        },\n        {\n            name: \"experimentDataPvc\",\n            value: \"\",\n            description: \"Data PVC\",\n        },\n        {\n            name: \"experimentRecordPvc\",\n            value: \"kubebench-exp-pvc\",\n            description: \"Experiment PVC\",\n        },\n        {\n            name: \"postJobImage\",\n            value: \"gcr.io/kubeflow-images-public/kubebench/kubebench-example-tf-cnn-post-processor:3c75b50\",\n            description: \"Image of post processor\",\n        },\n        {\n            name: \"postJobArgs\",\n            value: \"\",\n            description: \"Arguments of post processor\",\n        },\n        {\n            name: \"reportType\",\n            value: \"csv\",\n            description: \"Type of reporter\",\n        },\n        {\n            name: \"csvReporterInput\",\n            value: \"result.json\",\n            description: \"The input of CSV reporter\",\n        },\n        {\n            name: \"csvReporterOutput\",\n            value: \"report.csv\",\n            description: \"The output of CSV reporter\",\n        }\n    ]\n};\n\nconst filterValue = (obj, key) => {\n    return obj.findIndex(p => p.name === key)\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        // MODIFY\n        case ActionTypes.CHANGE_YAML:\n            return {\n                ...state,\n                yaml: action.yaml,\n            };\n        \n        // DEPLOY WHOLE\n        case ActionTypes.DEPLOY_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n                // snackOpen: true,\n                // snackText: 'Successfully deployed',\n            };\n        case ActionTypes.DEPLOY_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.text,\n            };\n        case ActionTypes.DEPLOY_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.error\n            };\n\n        \n        // DEPLOY PARAMS\n        case ActionTypes.DEPLOY_PARAM_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n        case ActionTypes.DEPLOY_PARAM_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.text,\n            };\n        case ActionTypes.DEPLOY_PARAM_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.error,\n            };\n        \n        // SNACK\n        case ActionTypes.CLOSE_SNACK:\n            return {\n                ...state,\n                snackOpen: false,\n            };\n\n        // SELECT_JOB\n        case ActionTypes.SELECT_JOB:\n            return {\n                ...state,\n                modalOpen: true,\n                currentId: action.id,\n                currentName: state.jobsList[action.id].name,\n            };\n        case ActionTypes.CLOSE_SELECT_JOB:\n            return {\n                ...state,\n                modalOpen: false,\n                currentId: action.id,\n            };\n            \n        // MODIFY\n        case ActionTypes.CHANGE_PARAMETER:\n            let params = state.parameters.slice();\n            let index = filterValue(params, action.name);\n            params[index].value = action.value;\n            return {\n                ...state,\n                parameters: params,\n            };\n\n        // FETCH\n        case ActionTypes.FETCH_JOB_REQUEST:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n        case ActionTypes.FETCH_JOB_SUCCESS:\n            return {\n                ...state,\n                jobsList: action.jobsList,\n                loading: false,\n            };\n        case ActionTypes.FETCH_JOB_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.error,\n            };\n\n        // DELETE\n        case ActionTypes.DELETE_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n        case ActionTypes.DELETE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.text,\n            };\n        case ActionTypes.DELETE_FAILURE: \n            return {\n                ...state, \n                loading: false,\n                snackOpen: true,\n                snackText: action.error,\n            };\n\n        default:\n            return state;\n\n    }\n};\n\nexport default rootReducer;","import { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios';\n\n// const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport const submitYaml = function *() {\n    while (true) {\n        const action = yield take(actions.DEPLOY_SUBMIT);\n        try {\n            const result = yield call(\n                submitYamlGo,\n                action.yaml,\n            );\n            if (result === 200) {\n                yield put({\n                    type: actions.DEPLOY_SUCCESS,\n                    text: \"Successfully submitted.\",\n                });\n            }\n        } catch (err) {\n            yield put({\n                type: actions.DEPLOY_FAILURE,\n                error: \"Whoops, something is wrong...\"\n            })\n        }\n    }\n};\n\nconst submitYamlGo = function* (yaml) {\n    try {\n        let data = {yaml};\n        const result = yield call(\n            axios.post,\n            '/dashboard/submit_yaml/',\n            data,\n        );\n\n        return result.status\n    }catch (err) {\n        yield put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const submitParams = function *() {\n    while (true) {\n        const action = yield take(actions.DEPLOY_PARAM_SUBMIT);\n        try {\n            const result = yield call(\n                submitParamsGo,\n                action.parameters\n            );\n            if (result === 200) {\n                yield put({\n                    type: actions.DEPLOY_PARAM_SUCCESS,\n                    text: \"Successfully submitted.\",\n                });\n            }\n        } catch (err) {\n            yield put({\n                type: actions.DEPLOY_PARAM_FAILURE,\n                error: \"Whoops, something is wrong...\"\n            })\n        }\n    }\n};\n\nconst submitParamsGo = function* (parameters) {\n    try {\n        let newParameters = {};\n        parameters.map((item, i) => {\n            newParameters[item.name] = item.value;\n        })\n\n        const result = yield call(\n            axios.post,\n            '/dashboard/submit_params/',\n            newParameters,\n        );\n        \n        return result.status\n    }catch (err) {\n        yield put({\n            type: actions.DEPLOY_PARAM_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const fetchJobsSaga = function *() {\n    while (true) {\n        const action = yield take(actions.FETCH_JOB_REQUEST);\n        try {\n            const result = yield call(\n                fetchJobsGo\n            );\n        \n            let jobsList = [];\n            for(let i = 0; i < result.Names.length; i++) {\n                jobsList.push(\n                    {\n                        name: result.Names[i],\n                        status: result.Status[i],\n                    }\n                );\n            }\n            yield put({\n                type: actions.FETCH_JOB_SUCCESS,\n                jobsList: jobsList,\n            });\n        } catch (err) {\n            return Promise.reject(err.message)\n        }\n    }\n};\n\nconst fetchJobsGo = function* () {\n    try {\n        const result = yield call(\n            axios.get,\n            '/dashboard/fetch_jobs/'\n        );\n\n        return result.data;\n    } catch (err) {\n        yield put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const deleteJobSaga = function *() {\n    while (true) {\n        const action = yield take(actions.DELETE_SUBMIT);\n        try {\n            const result = yield call(\n                deleteJobGo,\n                action.name\n            );\n            if (result.Status === \"ok\") {\n                yield put({\n                    type: actions.DELETE_SUCCESS,\n                    text: \"Successfully deleted\",\n                });\n            } else {\n                yield put({\n                    type: actions.DELETE_FAILURE,\n                    error: \"Whoops, something is wrong\",\n                });\n            }\n\n        } catch (err) {\n            return Promise.reject(err.message);\n        }\n    }\n}\n\nconst deleteJobGo = function* (name) {\n    try {\n        let data = {name};\n        const result = yield call(\n            axios.post,\n            '/dashboard/delete_job/',\n            data,\n        );\n\n        return result.data\n    }catch (err) {\n        yield put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchJobsSaga),\n        fork(deleteJobSaga),\n        fork(submitYaml),\n        fork(submitParams),\n    ]);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport configureStore from './store';\nimport rootSaga from './sagas';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\n\n\nconst store = configureStore();\n\nstore.runSaga(rootSaga);\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#ab47bc',\n        },\n        secondary: {\n            main: '#cddc39',\n        },\n    },\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <MuiThemeProvider theme={theme}>\n                <CssBaseline />\n                <App />\n            </MuiThemeProvider>\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport rootReducer from '../reducers';\n\n\nexport default function configureStore(initialState) {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(\n                sagaMiddleware,\n                logger\n            )\n        )\n    );\n\n    store.runSaga = sagaMiddleware.run;\n    store.close = () => store.dispatch(END);\n    return store;\n}"],"sourceRoot":""}