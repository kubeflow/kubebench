{"version":3,"sources":["components/Header.jsx","actions/index.js","components/GenerateFromYaml.jsx","components/GenerateFromParameters.jsx","components/JobInfo.jsx","components/Watch.jsx","components/App.jsx","serviceWorker.js","reducers/index.js","sagas/index.js","index.js","store/index.js"],"names":["withStyles","root","flexGrow","grow","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","closeSnack","type","connect","state","yaml","loading","snackOpen","snackText","changeYaml","submitWholeYaml","theme","width","margin","editor","submit","textAlign","button","spacing","unit","progress","height","close","padding","LinearProgress_default","lib_default","mode","value","onChange","name","editorProps","$blockScrolling","tabSize","enableLiveAutocompletion","fontSize","Button_default","disabled","onClick","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","id","action","IconButton_default","key","aria-label","Close_default","parameters","changeParameters","submitYamlParameters","params","textField","marginLeft","marginRight","help","verticalAlign","section","parameter","map","param","i","description","Grid_default","container","item","xs","sm","Tooltip_default","title","HelpOutline_default","TextField_default","event","target","deleteJob","paper","backgroundColor","palette","background","boxShadow","shadows","modal","top","left","Modal_default","aria-labelledby","aria-describedby","href","concat","Watch","onFilter","_this","filterJobs","openModal","handleType","changeType","checked","_this2","this","filter","FormGroup_default","row","label","Object","keys","filterType","FormControlLabel_default","control","Switch_default","List_default","component","jobs","job","icon","status","Schedule_default","running","HighlightOff_default","failed","Done_default","finished","ListItem_default","ListItemIcon_default","ListItemText_default","inset","primary","components_JobInfo","closeModal","modalOpen","React","Component","filteredJobsList","currentId","current","currentName","fetchJobs","paddingTop","components_Header","menu","Item","Link","to","es_icon","Route","exact","path","GenerateFromYaml","GenerateFromParameters","Boolean","window","location","hostname","match","initialState","Running","Failed","Success","jobsList","currentLinks","rootReducer","obj","arguments","length","undefined","objectSpread","text","error","slice","findIndex","p","newList","includes","avTypes","assign","avFilters","filteredJobs","types","filters","filtered","rootSaga","submitYaml","regenerator_default","mark","wrap","_context","prev","next","take","sent","call","submitYamlGo","put","t0","stop","data","result","_context2","axios","post","abrupt","submitParams","_context3","submitParamsGo","newParameters","_context4","fetchJobsSaga","_context5","fetchJobsGo","Names","push","Status","Promise","reject","_context6","get","deleteJobSaga","_context7","deleteJobGo","_context8","_context9","all","fork","_marked","store","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","logger","runSaga","run","dispatch","END","configureStore","createMuiTheme","main","secondary","ReactDOM","render","es","BrowserRouter","basename","styles","CssBaseline_default","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88ac91ea.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n};\n\nconst Header = (props) => {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <AppBar position={\"static\"} color={\"primary\"}>\n                <Toolbar>\n                    <Typography variant={\"display1\"} color={\"inherit\"} className={classes.grow}>\n                        <strong>Kubebench Dashboard</strong>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","export const CHANGE_YAML = \"CHANGE_YAML\";\n\nexport const CLOSE_SNACK = \"CLOSE_SNACK\";\n\nexport const SELECT_JOB = \"SELECT_JOB\";\nexport const CLOSE_SELECT_JOB = \"CLOSE_SELECT_JOB\";\n\nexport const DEPLOY_SUBMIT = \"DEPLOY_SUBMIT\";\nexport const DEPLOY_SUCCESS = \"DEPLOY_SUCCESS\";\nexport const DEPLOY_FAILURE = \"DEPLOY_FAILURE\";\n\nexport const DEPLOY_PARAM_SUBMIT = \"DEPLOY_PARAM_SUBMIT\";\nexport const DEPLOY_PARAM_SUCCESS = \"DEPLOY_PARAM_SUCCESS\";\nexport const DEPLOY_PARAM_FAILURE = \"DEPLOY_PARAM_FAILURE\";\n\nexport const DELETE_SUBMIT = \"DELETE SUBMIT\";\nexport const DELETE_SUCCESS = \"DELETE_SUCCESS\";\nexport const DELETE_FAILURE = \"DELETE_FAILURE\";\n\nexport const CHANGE_PARAMETER = \"CHANGE_PARAMETER\";\n\nexport const FETCH_JOB_REQUEST = \"FETCH_JOB_REQUEST\";\nexport const FETCH_JOB_SUCCESS = \"FETCH_JOB_SUCCESS\";\nexport const FETCH_JOB_FAILURE = \"FETCH_JOB_FAILURE\";\n\nexport const FILTER_JOBS = \"FILTER_JOBS\";\nexport const CHANGE_TYPE = \"CHANGE_TYPE\";\n\n\nexport const changeYaml = (yaml) => {\n    return {\n        type: CHANGE_YAML,\n        yaml: yaml,\n    };\n};\n\nexport const changeParameters = (name, value) => {\n    return {\n        type: CHANGE_PARAMETER,\n        name,\n        value,\n    };\n};\n\nexport const submitWholeYaml = (yaml) => {\n    return {\n        type: DEPLOY_SUBMIT,\n        loading: true,\n        yaml: yaml\n    };\n};\n\nexport const submitYamlParameters = (params) => {\n    return {\n        type: DEPLOY_PARAM_SUBMIT,\n        loading: true,\n        parameters: params,\n    };\n};\n\nexport const closeSnack =() => {\n    return {\n        type: CLOSE_SNACK,\n    };\n};\n\nexport const openModal = (id) => {\n    return {\n        type: SELECT_JOB,\n        id,\n    };\n};\n\nexport const closeModal = () => {\n    return {\n        type: CLOSE_SELECT_JOB,\n    };\n};\n\nexport const deleteJob = (name) => {\n    return {\n        type: DELETE_SUBMIT,\n        name,\n    };\n};\n\nexport const fetchJobs = () => {\n    return {\n        type: FETCH_JOB_REQUEST,\n        loading: true,\n    }\n}\n\nexport const filterJobs = (filter) => {\n    return {\n        type: FILTER_JOBS,\n        filter,\n    };\n};\n\nexport const changeType = (filter, checked) => {\n    return {\n        type: CHANGE_TYPE,\n        filter,\n        checked,\n    };\n};","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { changeYaml, submitWholeYaml, closeSnack } from '../actions';\n\nimport brace from 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\nimport AceEditor from 'react-ace';\nimport Button from '@material-ui/core/Button';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    editor: {\n        margin: '0 auto',\n    },\n    submit: {\n        textAlign: 'center',\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n});\n\n\nconst GenerateFromYaml = (props) => {\n\n    const onYamlChange = (value) => {\n        props.changeYaml(value);\n    };\n\n    const submitWholeYaml = () => {\n        props.submitWholeYaml(props.yaml);\n    };\n\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <h1>Generate</h1>\n            <hr />\n            {props.loading && <LinearProgress className={classes.progress}/>}\n            <div className={classes.editor}>\n                <AceEditor\n                    mode=\"text\"\n                    theme=\"tomorrow\"\n                    value={props.yaml}\n                    onChange={onYamlChange}\n                    name=\"UNIQUE_ID_OF_DIV\"\n                    editorProps={{$blockScrolling: true}}\n                    tabSize={2}\n                    enableLiveAutocompletion={true}\n                    fontSize={14}\n                    width={'100%'}\n                    height={700}\n                />\n            </div>\n            <div className={classes.submit}>\n                <Button variant=\"contained\" disabled={props.loading} color={\"primary\"} className={classes.button} onClick={submitWholeYaml}>\n                    Deploy\n                </Button>\n            </div>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={props.snackOpen}\n                autoHideDuration={6000}\n                onClose={props.closeSnack}\n                message={<span id=\"message-id\">{props.snackText}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={props.closeSnack}\n                    >\n                        <CloseIcon />\n                    </IconButton>,\n                ]}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        yaml: state.yaml,\n        loading: state.loading,\n        snackOpen: state.snackOpen,\n        snackText: state.snackText,\n    };\n};\n\nGenerateFromYaml.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { changeYaml, submitWholeYaml, closeSnack })(withStyles(styles)(GenerateFromYaml));","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { closeSnack, changeParameters, submitYamlParameters } from '../actions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    editor: {\n        margin: '0 auto',\n    },\n    submit: {\n        textAlign: 'center',\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: '100%'\n    },\n    help: {\n        padding: theme.spacing.unit / 2,\n        verticalAlign: \"middle\",\n    },\n    section: {\n        padding: theme.spacing.unit,\n    },\n    parameter: {\n        padding: theme.spacing.unit / 2,\n    }\n});\n\n\nconst GenerateFromParameters = (props) => {\n\n    const onFieldChange = (name) => (event) => {\n        return props.changeParameters(name, event.target.value);\n    };\n\n    const submitYamlParameters = () => {\n        props.submitYamlParameters(props.parameters);\n    };\n\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <h1>Generate from parameters</h1>\n            <hr />\n            {props.loading && <LinearProgress className={classes.progress}/>}\n            {\n                props.parameters.map((param, i) => {\n                    if (param.description === \"section\") {\n                        return (\n                            <div key={i} className={classes.section}>\n                                <Grid container>\n                                    <Grid item xs={12} sm={12}>\n                                        <Typography variant=\"h6\">\n                                            {param.name}\n                                        </Typography>\n                                        <hr />\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )\n                    }\n                    return (\n                        <div key={i} className={classes.parameter}>\n                            <Grid container>\n                                <Grid item xs={12} sm={3}>\n                                    <Typography>\n                                        <Tooltip title={param.description}>\n                                            <HelpOutlineIcon className={classes.help} color={\"secondary\"}/>\n                                        </Tooltip>\n                                        {param.name}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} sm={8}>\n                                    <TextField\n                                        className={classes.textField}\n                                        value={param.value}\n                                        onChange={onFieldChange(param.name)}\n                                        />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    )\n                })\n            }\n            <div className={classes.submit}>\n                <Button variant=\"contained\" disabled={props.loading} color={\"primary\"} className={classes.button} onClick={submitYamlParameters}>\n                    Deploy\n                </Button>\n            </div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={props.snackOpen}\n                autoHideDuration={6000}\n                onClose={props.closeSnack}\n                message={<span id=\"message-id\">{props.snackText}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={props.closeSnack}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        snackOpen: state.snackOpen,\n        snackText: state.snackText,\n        parameters: state.parameters,\n    };\n};\n\nGenerateFromParameters.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { closeSnack, changeParameters, submitYamlParameters })(withStyles(styles)(GenerateFromParameters));","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport { deleteJob } from '../actions';\nimport {connect} from 'react-redux';\n\n\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n    },\n    modal: {\n        top: '40%',\n        left: '40%',\n    }\n});\n\n\nconst JobInfo = (props) => {\n    const { classes } = props;\n\n    const deleteJob = () => {\n        props.deleteJob(props.name);\n    };\n\n    return (\n        <Modal\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            open={props.open}\n            onClose={props.close}\n            className={classes.modal}\n        >\n            <div className={classes.paper}>\n                <Typography variant=\"h6\" id=\"modal-title\">\n                    { props.name }\n                </Typography>\n                <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                    <ul>\n                        <li><a href={`/argo/workflows/default/${props.name}`} target={\"_blank\"}>Argo</a></li>\n                        <li><a href={`/grafana/d/eqSbm0Aik3/kubebench-monitoring`} target={\"_blank\"}>Grafana</a></li>\n                        <li><a href={`/`} target={\"_blank\"}>NFS</a></li>\n                    </ul>\n                </Typography>\n                <Button variant=\"contained\" color={\"primary\"} className={classes.button} onClick={deleteJob}>\n                    Delete\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nJobInfo.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(null, { deleteJob })(withStyles(styles)(JobInfo));","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DoneIcon from '@material-ui/icons/Done';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nimport { openModal, closeModal, fetchJobs, closeSnack, filterJobs, changeType } from \"../actions\";\n\nimport JobInfo from './JobInfo'\n\nconst styles = theme => ({\n    root: {\n        width: '90%',\n        margin: '0 auto',\n    },\n    running: {\n        color: '#8b8ffb',\n    },\n    failed: {\n        color: '#f26363',\n    },\n    finished: {\n        color: '#63f291',\n    },\n    progress: {\n        height: 10,\n        margin: 10,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    filter: {\n        margin: '0 auto',\n        textAlign: 'center',\n    },\n});\n\n\nclass Watch extends React.Component {\n    componentDidMount() {\n        // this.props.fetchJobs()\n    }\n\n    onFilter = event => {\n        this.props.filterJobs(event.target.value);\n    }\n\n    open = (id) => event => {\n        this.props.openModal(id);\n    }\n\n    deleteJob = (name) => {\n        this.props.deleteJob(name)\n    }\n\n    handleType = (name) => event => {\n        this.props.changeType(name, event.target.checked);\n    }\n\n    render () {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <h1>Monitor</h1>\n                <hr />\n                {this.props.loading && <LinearProgress className={classes.progress}/>}\n                <div className={classes.filter}>\n                    <FormGroup row>\n                        <TextField\n                            id=\"outlined-name\"\n                            label=\"Name\"\n                            className={classes.textField}\n                            value={this.props.filter}\n                            onChange={this.onFilter}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        {\n                                Object.keys(this.props.filterType).map((filter, i) => {\n                                return(\n                                    <FormControlLabel\n                                        key={i}\n                                        control={\n                                            <Switch\n                                            checked={this.props.filterType[filter]}\n                                            onChange={this.handleType(filter)}\n                                            value={filter}\n                                            color={\"secondary\"}\n                                            />\n                                        }\n                                        label={filter}\n                                    />\n                                );\n                            })\n                        }\n                    </FormGroup>\n                </div>\n                <List component=\"nav\">\n                    {this.props.jobs.map((job, i) => {\n                        let icon;\n                        if (job.status === 'Running') {\n                            icon = (<ScheduleIcon className={classes.running}/>)\n                        } else if (job.status === 'Failed') {\n                            icon = (<HighlightOffIcon className={classes.failed}/>)\n                        } else {\n                            icon = (<DoneIcon className={classes.finished}/>)\n                        }\n                        return (\n                            <ListItem button key={i} onClick={this.open(i)}>\n                                <ListItemIcon>\n                                    {icon}\n                                </ListItemIcon>\n                                <ListItemText inset primary={job.name} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n                <JobInfo\n                    close={this.props.closeModal}\n                    open={this.props.modalOpen}\n                    name={this.props.name}\n                />\n                 <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    open={this.props.snackOpen}\n                    autoHideDuration={6000}\n                    onClose={this.props.closeSnack}\n                    message={<span id=\"message-id\">{this.props.snackText}</span>}\n                    action={[\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.props.closeSnack}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jobs: state.filteredJobsList,\n        modalOpen: state.modalOpen,\n        currentId: state.current,\n        name: state.currentName,\n        loading: state.loading,\n        snackOpen: state.snackOpen,\n        snackText: state.snackText,\n        filter: state.filter,\n        filterType: state.filterType,\n    };\n};\n\nWatch.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default connect(mapStateToProps, { openModal, closeModal, fetchJobs, closeSnack, filterJobs, changeType })(withStyles(styles)(Watch));","import React  from 'react';\nimport Header from './Header';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport GenerateFromYaml from './GenerateFromYaml';\nimport GenerateFromParameters from './GenerateFromParameters';\nimport Watch from './Watch';\n\nimport  { Route, Link } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\nimport \"antd/dist/antd.css\";\n\n\nconst styles = {\n    root: {\n        width: '90%',\n        margin: '0 auto',\n        paddingTop: 20,\n    }\n};\n\nconst App = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <Header />\n            <Menu\n                // selectedKeys={[this.state.current]}\n                mode=\"horizontal\"\n            >\n                <Menu.Item key=\"yaml\">\n                    <Link to=\"/\">\n                        <Icon type=\"file-text\" />\n                        Generate from YAML\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"param\">\n                    <Link to=\"/defaults\">\n                        <Icon type=\"ordered-list\" />\n                        Generate from parameters\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"watch\">\n                    <Link to=\"/monitor\">\n                        <Icon type=\"eye\" />\n                        Monitor\n                    </Link>\n                </Menu.Item>\n            </Menu>\n\n            <Route exact path=\"/\" component={GenerateFromYaml} />\n            <Route path=\"/defaults/\" component={GenerateFromParameters} />\n            <Route path=\"/monitor/\" component={Watch} />\n        </div>\n    )\n};\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ActionTypes from '../actions';\n// import { combineReducers } from 'redux';\n\nconst initialState = {\n    yaml: `apiVersion: kubebench.operator/v1\nkind: KubebenchJob\nmetadata:\n  name: kubebench-job\n  namespace: default\nspec:\n  serviceAccount: default\n  volumeSpecs:\n    configVolume:\n      name: my-config-volume\n      persistentVolumeClaim:\n        claimName: kubebench-config-pvc\n    experimentVolume:\n      name: my-experiment-volume\n      persistentVolumeClaim:\n        claimName: kubebench-exp-pvc\n  # secretSpecs: # optional\n  #   githubTokenSecret: # optional\n  #     secretName: my-github-token-secret\n  #     secretKey: my-github-token-secret-key\n  #   gcpCredentialsSecret: # optional\n  #     secretName: my-gcp-credentials-secret\n  #     secretKey: my-gcp-credentials-secret-key\n  jobSpecs:\n    preJob: # optional\n      container: # optional between \"container\" and \"resource\"\n        name: my-prejob\n        image: gcr.io/myprejob-image:latest # change it before using\n    mainJob: # mandatory\n      resource: # optional between \"container\" and \"resource\"\n        manifestTemplate:\n          valueFrom:\n            ksonnet: # optional, more types in the future\n              name: kubebench-example-tfcnn-with-monitoring\n              package: kubebench-examples\n              registry: /kubebench/config/registry/kubebench\n        manifestParameters:\n          valueFrom:\n            path: tf-cnn/tf-cnn-dummy.yaml\n        createSuccessCondition: createSuccess # optional\n        createFailureCondition: createFailure # optional\n        runSuccessCondition: runSuccess # optional\n        runFailureCondition: runFailure # optional\n        #other optional fields: \"manifest\" - string of raw manifest\n    postJob: # optional\n      container: # optional between \"container\" and \"resource\"\n        name: my-postjob\n        image: gcr.io/kubeflow-images-public/kubebench/kubebench-example-tf-cnn-post-processor:3c75b50\n  reportSpecs: # optional\n    csv: # optional\n        - inputPath: result.json\n          outputPath: report.csv`,\n    loading: false,\n    snackOpen: false,\n    snackText: '',\n    filter: '',\n    filterType: {\n        \"Running\": true,\n        \"Failed\": true,\n        \"Success\": true,\n    },\n    jobsList: [\n\n    ],\n    filteredJobsList: [\n    ],\n    modalOpen: false,\n    currentId: null,\n    currentName: '',\n    currentLinks: ['First link', 'Second link'],\n    parameters: [\n        {\n            name: \"General section\",\n            description: \"section\",\n        },\n        {\n            name: \"name\",\n            value: \"kubebench-job\",\n            description: \"Job name\",\n        },\n        {\n            name: \"namespace\",\n            value: \"default\",\n            description: \"Job namespace\"\n        },\n        {\n            name: \"serviceAccount\",\n            value: \"default\",\n            description: \"The service account used to run the job\",\n        },\n        {\n            name: \"Secrets section\",\n            description: \"section\",\n        },\n        {\n            name: \"githubTokenSecret\",\n            description: \"\",\n            value: \"GitHub token secret\",\n        },\n        {\n            name: \"githubTokenSecretKey\",\n            value: \"\",\n            description: \"Key of GitHub token secret\",\n        },\n        {\n            name: \"gcpCredentialsSecret\",\n            value: \"GCP credentials secret\",\n            description: \"\",\n        },\n        {\n            name: \"gcpCredentialsSecretKey\",\n            value: \"\",\n            description: \"Key of GCP credentials secret\",\n        },\n        {\n            name: \"Main job section\",\n            description: \"section\",\n        },\n        {\n            name: \"mainJobKsPrototype\",\n            value: \"kubebench-example-tfcnn\",\n            description: \"The Ksonnet prototype of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobKsPackage\",\n            value: \"kubebench-examples\",\n            description: \"The Ksonnet package of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobKsRegistry\",\n            value: \"github.com/kubeflow/kubebench/tree/master/kubebench\",\n            description: \"The Ksonnet registry of the job being benchmarked\",\n        },\n        {\n            name: \"mainJobConfig\",\n            value: \"tf-cnn/tf-cnn-dummy.yaml\",\n            description: \"Path to the config of the benchmarked job\",\n        },\n        {\n            name: \"Volumes section\",\n            description: \"section\",\n        },\n        {\n            name: \"experimentConfigPvc\",\n            value: \"kubebench-config-pvc\",\n            description: \"Configuration PVC\",\n        },\n        {\n            name: \"experimentDataPvc\",\n            value: \"\",\n            description: \"Data PVC\",\n        },\n        {\n            name: \"experimentRecordPvc\",\n            value: \"kubebench-exp-pvc\",\n            description: \"Experiment PVC\",\n        },\n        {\n            name: \"Post job section\",\n            description: \"section\",\n        },\n        {\n            name: \"postJobImage\",\n            value: \"gcr.io/kubeflow-images-public/kubebench/kubebench-example-tf-cnn-post-processor:3c75b50\",\n            description: \"Image of post processor\",\n        },\n        {\n            name: \"postJobArgs\",\n            value: \"\",\n            description: \"Arguments of post processor\",\n        },\n        {\n            name: \"reportType\",\n            value: \"csv\",\n            description: \"Type of reporter\",\n        },\n        {\n            name: \"csvReporterInput\",\n            value: \"result.json\",\n            description: \"The input of CSV reporter\",\n        },\n        {\n            name: \"csvReporterOutput\",\n            value: \"report.csv\",\n            description: \"The output of CSV reporter\",\n        }\n    ]\n};\n\nconst filterValue = (obj, key) => {\n    return obj.findIndex(p => p.name === key)\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        // MODIFY\n        case ActionTypes.CHANGE_YAML:\n            return {\n                ...state,\n                yaml: action.yaml,\n            };\n        \n        // DEPLOY WHOLE\n        case ActionTypes.DEPLOY_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n                // snackOpen: true,\n                // snackText: 'Successfully deployed',\n            };\n        case ActionTypes.DEPLOY_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.text,\n            };\n        case ActionTypes.DEPLOY_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.error\n            };\n\n        \n        // DEPLOY PARAMS\n        case ActionTypes.DEPLOY_PARAM_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n        case ActionTypes.DEPLOY_PARAM_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.text,\n            };\n        case ActionTypes.DEPLOY_PARAM_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.error,\n            };\n        \n        // SNACK\n        case ActionTypes.CLOSE_SNACK:\n            return {\n                ...state,\n                snackOpen: false,\n            };\n\n        // SELECT_JOB\n        case ActionTypes.SELECT_JOB:\n            return {\n                ...state,\n                modalOpen: true,\n                currentId: action.id,\n                currentName: state.jobsList[action.id].name,\n            };\n        case ActionTypes.CLOSE_SELECT_JOB:\n            return {\n                ...state,\n                modalOpen: false,\n                currentId: action.id,\n            };\n            \n        // MODIFY\n        case ActionTypes.CHANGE_PARAMETER:\n            let params = state.parameters.slice();\n            let index = filterValue(params, action.name);\n            params[index].value = action.value;\n            return {\n                ...state,\n                parameters: params,\n            };\n\n        // FETCH\n        case ActionTypes.FETCH_JOB_REQUEST:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n        case ActionTypes.FETCH_JOB_SUCCESS:\n            return {\n                ...state,\n                jobsList: action.jobsList,\n                loading: false,\n            };\n        case ActionTypes.FETCH_JOB_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.error,\n            };\n\n        // FILTER \n        case ActionTypes.FILTER_JOBS:\n            const jobs = state.jobsList.slice();\n            const newList = jobs.filter(job => job.name.includes(action.filter));\n\n            const avTypes = Object.assign({}, state.filterType);\n            var typeKeys = Object.keys(avTypes);\n\n            var avFilters = typeKeys.filter((key) => {\n                return avTypes[key]\n            });\n            const filteredJobs = newList.filter(job => avFilters.includes(job.status));\n            return {\n                ...state,\n                filteredJobsList: filteredJobs,\n                filter: action.filter,\n            };\n\n        // FILTER TYPE\n        case ActionTypes.CHANGE_TYPE:\n            const types = Object.assign({}, state.filterType)\n            types[action.filter] = action.checked;\n            var keys = Object.keys(types);\n\n            var filters = keys.filter((key) => {\n                return types[key]\n            });\n            const jobsList = state.jobsList.slice();\n            const filtered = jobsList.filter(job => filters.includes(job.status));\n            // types[action.type] = \n            return {\n                ...state,\n                filterType: types,\n                filteredJobsList: filtered,\n            };\n\n        // DELETE\n        case ActionTypes.DELETE_SUBMIT:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n        case ActionTypes.DELETE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                snackOpen: true,\n                snackText: action.text,\n                modalOpen: false,\n            };\n        case ActionTypes.DELETE_FAILURE: \n            return {\n                ...state, \n                loading: false,\n                snackOpen: true,\n                snackText: action.error,\n            };\n\n        default:\n            return state;\n\n    }\n};\n\nexport default rootReducer;","import { take, put, call, fork, select, all, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport axios from 'axios';\n\n// const shittyOne = () => {\n//     return {\n//         type: 'REQUESTED_SHIT'\n//     }\n// };\n//\n// function* watchShitty() {\n//     yield takeEvery('REQUESTED_SHIT', shittyOneAsync);\n// }\n//\n// function* shittyOneAsync() {\n//     try {\n//         const data = yield call(() => {\n//             //send request here\n//             fetch('https://dog.ceo/api/breeds/image/random')\n//                 .then(res => res.json())\n//         })\n//\n//     }catch(error) {\n//         yield  put('SHIT');\n//     }\n// }\n\nexport const submitYaml = function *() {\n    while (true) {\n        const action = yield take(actions.DEPLOY_SUBMIT);\n        try {\n            const result = yield call(\n                submitYamlGo,\n                action.yaml,\n            );\n            if (result === 200) {\n                yield put({\n                    type: actions.DEPLOY_SUCCESS,\n                    text: \"Successfully submitted.\",\n                });\n            }\n        } catch (err) {\n            yield put({\n                type: actions.DEPLOY_FAILURE,\n                error: \"Whoops, something is wrong...\"\n            })\n        }\n    }\n};\n\nconst submitYamlGo = function* (yaml) {\n    try {\n        let data = {yaml};\n        const result = yield call(\n            axios.post,\n            '/dashboard/submit_yaml/',\n            data,\n        );\n\n        return result.status\n    }catch (err) {\n        yield put({\n            type: actions.DEPLOY_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const submitParams = function *() {\n    while (true) {\n        const action = yield take(actions.DEPLOY_PARAM_SUBMIT);\n        try {\n            const result = yield call(\n                submitParamsGo,\n                action.parameters\n            );\n            if (result === 200) {\n                yield put({\n                    type: actions.DEPLOY_PARAM_SUCCESS,\n                    text: \"Successfully submitted.\",\n                });\n            }\n        } catch (err) {\n            yield put({\n                type: actions.DEPLOY_PARAM_FAILURE,\n                error: \"Whoops, something is wrong...\"\n            })\n        }\n    }\n};\n\nconst submitParamsGo = function* (parameters) {\n    try {\n        let newParameters = {};\n        parameters.map((item, i) => {\n            newParameters[item.name] = item.value;\n        })\n\n        const result = yield call(\n            axios.post,\n            '/dashboard/submit_params/',\n            newParameters,\n        );\n        \n        return result.status\n    }catch (err) {\n        yield put({\n            type: actions.DEPLOY_PARAM_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const fetchJobsSaga = function *() {\n    while (true) {\n        const action = yield take(actions.FETCH_JOB_REQUEST);\n        try {\n            const result = yield call(\n                fetchJobsGo\n            );\n        \n            let jobsList = [];\n            for(let i = 0; i < result.Names.length; i++) {\n                jobsList.push(\n                    {\n                        name: result.Names[i],\n                        status: result.Status[i],\n                    }\n                );\n            }\n            yield put({\n                type: actions.FETCH_JOB_SUCCESS,\n                jobsList: jobsList,\n            });\n        } catch (err) {\n            return Promise.reject(err.message)\n        }\n    }\n};\n\nconst fetchJobsGo = function* () {\n    try {\n        const result = yield call(\n            axios.get,\n            '/dashboard/fetch_jobs/'\n        );\n\n        return result.data;\n    } catch (err) {\n        yield put({\n            type: actions.FETCH_JOB_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport const deleteJobSaga = function *() {\n    while (true) {\n        const action = yield take(actions.DELETE_SUBMIT);\n        try {\n            const result = yield call(\n                deleteJobGo,\n                action.name\n            );\n            if (result.Status === \"ok\") {\n                yield put({\n                    type: actions.DELETE_SUCCESS,\n                    text: \"Successfully deleted\",\n                });\n            } else {\n                yield put({\n                    type: actions.DELETE_FAILURE,\n                    error: \"Whoops, something is wrong\",\n                });\n            }\n\n        } catch (err) {\n            return Promise.reject(err.message);\n        }\n    }\n}\n\nconst deleteJobGo = function* (name) {\n    try {\n        let data = {name};\n        const result = yield call(\n            axios.post,\n            '/dashboard/delete_job/',\n            data,\n        );\n\n        return result.data\n    }catch (err) {\n        yield put({\n            type: actions.DELETE_FAILURE,\n            error: \"Whoops, something is wrong...\",\n        });\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchJobsSaga),\n        fork(deleteJobSaga),\n        fork(submitYaml),\n        fork(submitParams),\n    ]);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport configureStore from './store';\nimport rootSaga from './sagas';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\n\n\nconst store = configureStore();\n\nstore.runSaga(rootSaga);\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#fe42ad',\n        },\n        secondary: {\n            main: '#049fd9',\n        },\n    },\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename=\"/dashboard/\">\n            <MuiThemeProvider theme={theme}>\n                <CssBaseline />\n                <App />\n            </MuiThemeProvider>\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport rootReducer from '../reducers';\n\n\nexport default function configureStore(initialState) {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(\n                sagaMiddleware,\n                logger\n            )\n        )\n    );\n\n    store.runSaga = sagaMiddleware.run;\n    store.close = () => store.dispatch(END);\n    return store;\n}"],"sourceRoot":""}